<statements>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quote</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>137</id>
        <start>3410</start>
        <end>3422</end>
        <line>92</line>
        <description>Encoder.this.pctEncode(c)</description>
        <symbolName>com.agilogy.uri.Encoder.pctEncode</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>decode</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>146</id>
        <start>3798</start>
        <end>3820</end>
        <line>109</line>
        <description>JavaNetCodec.decode(s)</description>
        <symbolName>com.agilogy.uri.JavaNetCodec.decode</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>AbsolutePath</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.AbsolutePath</fullClassName>
        <method>toString</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>218</id>
        <start>3511</start>
        <end>3544</end>
        <line>99</line>
        <description>scala.StringContext.apply(&quot;AbsolutePath(&quot;, &quot;)&quot;).s(AbsolutePath.this.stringValue)</description>
        <symbolName>scala.StringContext.s</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>RootlessPath</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.RootlessPath</fullClassName>
        <method>toString</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>227</id>
        <start>4362</start>
        <end>4376</end>
        <line>125</line>
        <description>&quot;RootlessPath(&quot;</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Literal</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>433</id>
        <start>9185</start>
        <end>9189</end>
        <line>239</line>
        <description>scala.None</description>
        <symbolName>scala.None</symbolName>
        <treeName>Block</treeName>
        <branch>true</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>pctEncode</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>92</id>
        <start>942</start>
        <end>978</end>
        <line>26</line>
        <description>scala.util.Try.apply[String](JavaNetCodec.encode(c.toString()))</description>
        <symbolName>scala.util.Try.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>442</id>
        <start>9314</start>
        <end>9318</end>
        <line>246</line>
        <description>scala.None</description>
        <symbolName>scala.None</symbolName>
        <treeName>Block</treeName>
        <branch>true</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>isAlpha</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>101</id>
        <start>1401</start>
        <end>1449</end>
        <line>42</line>
        <description>c.&gt;=('a').&amp;&amp;(c.&lt;=('z')).||(c.&gt;=('A').&amp;&amp;(c.&lt;=('Z')))</description>
        <symbolName>scala.Boolean.||</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>Path</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Path</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>200</id>
        <start>2042</start>
        <end>2074</end>
        <line>56</line>
        <description>acc./(Encoder.decode(m.group(1)))</description>
        <symbolName>com.agilogy.uri.Path./</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</source>
        <package>validation</package>
        <class>NoAuthorityPathQUriVOps</class>
        <classType>Class</classType>
        <fullClassName>validation.Validation.NoAuthorityPathQUriVOps</fullClassName>
        <method>f</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</path>
        <id>514</id>
        <start>2557</start>
        <end>2579</end>
        <line>37</line>
        <description>NoAuthorityPathQUriVOps.this.self.map[com.agilogy.uri.NoAuthorityPathQFUri](((x$14:
            com.agilogy.uri.NoAuthorityPathQUri) =&gt; x$14.f(fragment)))
        </description>
        <symbolName>scala.util.Either.map</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>Path</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.Path</fullClassName>
        <method>isRootless</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>173</id>
        <start>488</start>
        <end>517</end>
        <line>17</line>
        <description>Path.this.pathType.==(PathType.Rootless)</description>
        <symbolName>java.lang.Object.==</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>Path</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Path</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>209</id>
        <start>2415</start>
        <end>2415</end>
        <line>63</line>
        <description>immutable.this.List.canBuildFrom[com.agilogy.uri.Segment]</description>
        <symbolName>scala.collection.immutable.List.canBuildFrom</symbolName>
        <treeName>TypeApply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>Path</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Path</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>182</id>
        <start>1091</start>
        <end>1119</end>
        <line>31</line>
        <description>RootlessSingleSegmentPath.apply(s)</description>
        <symbolName>com.agilogy.uri.RootlessSingleSegmentPath.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>Path</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Path</fullClassName>
        <method>&lt;none&gt;</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>191</id>
        <start>1708</start>
        <end>1722</end>
        <line>46</line>
        <description>scala.Predef.augmentString(&quot;(/[^?#]*)+&quot;).r</description>
        <symbolName>scala.collection.immutable.StringLike.r</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Scheme.scala</source>
        <package>com.agilogy.uri</package>
        <class>Scheme</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.Scheme</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Scheme.scala</path>
        <id>254</id>
        <start>307</start>
        <end>342</end>
        <line>11</line>
        <description>scala.`package`.Right.apply[Nothing, com.agilogy.uri.Scheme]({
            final class $anon extends Scheme {
            def &lt;init&gt;(): &lt;$anon: com.agilogy.uri.Scheme&gt; = {
            $anon.super.&lt;init&gt;(v.toLowerCase());
            ()
            };
            &lt;empty&gt;
            };
            new $anon()
            })
        </description>
        <symbolName>scala.util.Right.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>424</id>
        <start>9102</start>
        <end>9105</end>
        <line>236</line>
        <description>'#'</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Literal</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>pctEncode</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>83</id>
        <start>790</start>
        <end>837</end>
        <line>22</line>
        <description>&quot;%0&quot;.+(java.lang.Integer.toHexString(c.toInt).toUpperCase())</description>
        <symbolName>java.lang.String.+</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</source>
        <package>validation</package>
        <class>NoAuthorityPathUriVOps</class>
        <classType>Class</classType>
        <fullClassName>validation.Validation.NoAuthorityPathUriVOps</fullClassName>
        <method>q</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</path>
        <id>496</id>
        <start>1294</start>
        <end>1313</end>
        <line>24</line>
        <description>NoAuthorityPathUriVOps.this.self.map[com.agilogy.uri.NoAuthorityPathQUri](((x$5:
            com.agilogy.uri.NoAuthorityPathUri) =&gt; x$5.q(query)))
        </description>
        <symbolName>scala.util.Either.map</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>469</id>
        <start>10251</start>
        <end>10296</end>
        <line>272</line>
        <description>Uri.of(s, a, path, query, fragment).right.get</description>
        <symbolName>scala.util.Either.RightProjection.get</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quoteAuthority</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>155</id>
        <start>4616</start>
        <end>4635</end>
        <line>137</line>
        <description>&quot;:&quot;.+(x$1.stringValue)</description>
        <symbolName>java.lang.String.+</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</source>
        <package>validation</package>
        <class>NoAuthorityPathUriVOps</class>
        <classType>Class</classType>
        <fullClassName>validation.Validation.NoAuthorityPathUriVOps</fullClassName>
        <method>f</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</path>
        <id>505</id>
        <start>1928</start>
        <end>1940</end>
        <line>30</line>
        <description>x$10.f(fragment)</description>
        <symbolName>com.agilogy.uri.NoFragmentUri.f</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/UriError.scala</source>
        <package>com.agilogy.uri</package>
        <class>UriParseError</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.UriParseError</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/UriError.scala</path>
        <id>478</id>
        <start>279</start>
        <end>327</end>
        <line>7</line>
        <description>scala.Predef.require(scheme.isDefined.||(authority.isDefined))</description>
        <symbolName>scala.Predef.require</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quoteUri</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>164</id>
        <start>4961</start>
        <end>5049</end>
        <line>148</line>
        <description>uri.query.map[String](((q: com.agilogy.uri.Query) =&gt; &quot;?&quot;.+(Encoder.quote(q.stringValue,
            Encoder.queryChars)))).getOrElse[String](&quot;&quot;)
        </description>
        <symbolName>scala.Option.getOrElse</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>EmptyPath</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.EmptyPath</fullClassName>
        <method>stringValue</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>245</id>
        <start>5847</start>
        <end>5849</end>
        <line>172</line>
        <description>&quot;&quot;</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Literal</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>451</id>
        <start>9449</start>
        <end>9491</end>
        <line>256</line>
        <description>scala.Tuple5.apply[Option[String], Option[String], Option[String], Option[String],
            Option[String]](scheme, authority, path, query, fragment)
        </description>
        <symbolName>scala.Tuple5.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>isValidScheme</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>110</id>
        <start>1740</start>
        <end>1752</end>
        <line>51</line>
        <description>v.length().&gt;(0)</description>
        <symbolName>scala.Int.&gt;</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>460</id>
        <start>9863</start>
        <end>9895</end>
        <line>265</line>
        <description>validation.Validation.sequence[com.agilogy.uri.AuthorityParseError,
            com.agilogy.uri.Authority](a.map[Either[com.agilogy.uri.AuthorityParseError,com.agilogy.uri.Authority]]({
            ((s: String) =&gt; Authority.parse(s))
            }))
        </description>
        <symbolName>validation.Validation.sequence</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quote</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>119</id>
        <start>2329</start>
        <end>2338</end>
        <line>69</line>
        <description>i.hasNext</description>
        <symbolName>scala.collection.Iterator.hasNext</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quote</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>128</id>
        <start>3035</start>
        <end>3045</end>
        <line>83</line>
        <description>&quot;&quot;.+(c).+(l)</description>
        <symbolName>java.lang.String.+</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>406</id>
        <start>8766</start>
        <end>8795</end>
        <line>222</line>
        <description>i.&lt;(length).&amp;&amp;(chars.apply(i).==(':'))</description>
        <symbolName>scala.Boolean.&amp;&amp;</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>415</id>
        <start>8895</start>
        <end>8951</end>
        <line>229</line>
        <description>i.+(1).&lt;(length).&amp;&amp;(chars.apply(i).==('/')).&amp;&amp;(chars.apply(i.+(1)).==('/'))
        </description>
        <symbolName>scala.Boolean.&amp;&amp;</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</source>
        <package>validation</package>
        <class>NoAuthorityPathUriVOps</class>
        <classType>Class</classType>
        <fullClassName>validation.Validation.NoAuthorityPathUriVOps</fullClassName>
        <method>/</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</path>
        <id>487</id>
        <start>839</start>
        <end>844</end>
        <line>19</line>
        <description>x$2./(s)</description>
        <symbolName>com.agilogy.uri.NoAuthorityPathUri./</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>ConsRootlessPath</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.ConsRootlessPath</fullClassName>
        <method>segments</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>236</id>
        <start>4914</start>
        <end>4914</end>
        <line>141</line>
        <description>collection.this.Seq.canBuildFrom[com.agilogy.uri.Segment]</description>
        <symbolName>scala.collection.Seq.canBuildFrom</symbolName>
        <treeName>TypeApply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>23</id>
        <start>1160</start>
        <end>1164</end>
        <line>37</line>
        <description>scala.None</description>
        <symbolName>scala.None</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>436</id>
        <start>9256</start>
        <end>9262</end>
        <line>243</line>
        <description>i.+(1)</description>
        <symbolName>scala.Int.+</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>pctEncode</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>95</id>
        <start>849</start>
        <end>1175</end>
        <line>23</line>
        <description>if (c.&lt;=('\u0080'))
            &quot;%&quot;.+(java.lang.Integer.toHexString(c.toInt).toUpperCase())
            else
            scala.util.Try.apply[String](JavaNetCodec.encode(c.toString())) match {
            case (value: String)scala.util.Success[String]((s @ _)) =&gt; s
            case (exception: Throwable)scala.util.Failure[String]((t @ _)) =&gt; &quot;?&quot;
            }
        </description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>If</treeName>
        <branch>true</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>445</id>
        <start>9388</start>
        <end>9394</end>
        <line>250</line>
        <description>i.+(1)</description>
        <symbolName>scala.Int.+</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>isDigit</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>104</id>
        <start>1492</start>
        <end>1512</end>
        <line>44</line>
        <description>c.&gt;=('0').&amp;&amp;(c.&lt;=('9'))</description>
        <symbolName>scala.Boolean.&amp;&amp;</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</source>
        <package>validation</package>
        <class>Validation</class>
        <classType>Trait</classType>
        <fullClassName>validation.Validation</fullClassName>
        <method>notNull</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</path>
        <id>517</id>
        <start>4023</start>
        <end>4064</end>
        <line>67</line>
        <description>v.map[scala.util.Right[Nothing,T]]({
            ((value: T) =&gt; scala.`package`.Right.apply[Nothing, T](value))
            }).getOrElse[scala.util.Either[E,T]](scala.`package`.Left.apply[E, Nothing](error))
        </description>
        <symbolName>scala.Option.getOrElse</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>read</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>391</id>
        <start>8507</start>
        <end>8509</end>
        <line>210</line>
        <description>&quot;&quot;</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Block</treeName>
        <branch>true</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>472</id>
        <start>10371</start>
        <end>10394</end>
        <line>274</line>
        <description>authority.left.toOption</description>
        <symbolName>scala.util.Either.LeftProjection.toOption</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quote</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>131</id>
        <start>3005</start>
        <end>3047</end>
        <line>83</line>
        <description>sb.append(JavaNetCodec.encode(&quot;&quot;.+(c).+(l)))</description>
        <symbolName>scala.collection.mutable.StringBuilder.append</symbolName>
        <treeName>Block</treeName>
        <branch>true</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>427</id>
        <start>9078</start>
        <end>9125</end>
        <line>236</line>
        <description>i.&lt;(length).&amp;&amp;(scala.Predef.Set.apply[Char]('?',
            '#').contains(chars.apply(i)).unary_!)
        </description>
        <symbolName>scala.Boolean.&amp;&amp;</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>463</id>
        <start>10063</start>
        <end>10080</end>
        <line>269</line>
        <description>Encoder.decode(q)</description>
        <symbolName>com.agilogy.uri.Encoder.decode</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quote</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>122</id>
        <start>2375</start>
        <end>2405</end>
        <line>71</line>
        <description>scala.Predef.charWrapper(c).isHighSurrogate.&amp;&amp;(i.hasNext)</description>
        <symbolName>scala.Boolean.&amp;&amp;</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>Path</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Path</fullClassName>
        <method>&lt;none&gt;</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>194</id>
        <start>1805</start>
        <end>1817</end>
        <line>49</line>
        <description>&quot;/([^?#/]*)&quot;</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Literal</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</source>
        <package>validation</package>
        <class>NoAuthorityPathQUriVOps</class>
        <classType>Class</classType>
        <fullClassName>validation.Validation.NoAuthorityPathQUriVOps</fullClassName>
        <method>##</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</path>
        <id>508</id>
        <start>2174</start>
        <end>2197</end>
        <line>34</line>
        <description>NoAuthorityPathQUriVOps.this.self.map[com.agilogy.uri.NoAuthorityPathQFUri](((x$11:
            com.agilogy.uri.NoAuthorityPathQUri) =&gt; x$11.##(fragment)))
        </description>
        <symbolName>scala.util.Either.map</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>Path</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.Path</fullClassName>
        <method>/</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>176</id>
        <start>794</start>
        <end>804</end>
        <line>23</line>
        <description>Segment.apply(s)</description>
        <symbolName>com.agilogy.uri.Segment.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>409</id>
        <start>8840</start>
        <end>8844</end>
        <line>225</line>
        <description>scala.None</description>
        <symbolName>scala.None</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>418</id>
        <start>8986</start>
        <end>9015</end>
        <line>231</line>
        <description>readUntil(scala.Predef.Set.apply[Char]('/', '?', '#'))</description>
        <symbolName>com.agilogy.uri.Uri.readUntil</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>&lt;none&gt;</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>77</id>
        <start>584</start>
        <end>588</end>
        <line>16</line>
        <description>&quot;/?&quot;</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Literal</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</source>
        <package>validation</package>
        <class>NoAuthorityPathUriVOps</class>
        <classType>Class</classType>
        <fullClassName>validation.Validation.NoAuthorityPathUriVOps</fullClassName>
        <method>/</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</path>
        <id>490</id>
        <start>940</start>
        <end>957</end>
        <line>20</line>
        <description>this./(com.agilogy.uri.Segment.apply(s))</description>
        <symbolName>validation.Validation.NoAuthorityPathUriVOps./</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>pctEncode</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>86</id>
        <start>876</start>
        <end>879</end>
        <line>24</line>
        <description>&quot;%&quot;</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Literal</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>Path</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Path</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>185</id>
        <start>1256</start>
        <end>1284</end>
        <line>34</line>
        <description>RootlessSingleSegmentPath.apply(s)</description>
        <symbolName>com.agilogy.uri.RootlessSingleSegmentPath.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</source>
        <package>validation</package>
        <class>NoAuthorityPathUriVOps</class>
        <classType>Class</classType>
        <fullClassName>validation.Validation.NoAuthorityPathUriVOps</fullClassName>
        <method>##</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</path>
        <id>499</id>
        <start>1548</start>
        <end>1561</end>
        <line>27</line>
        <description>x$7.##(fragment)</description>
        <symbolName>com.agilogy.uri.NoAuthorityPathUri.##</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quoteSegment</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>158</id>
        <start>4703</start>
        <end>4716</end>
        <line>141</line>
        <description>s.stringValue</description>
        <symbolName>com.agilogy.uri.Segment.stringValue</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>normalize</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>167</id>
        <start>5220</start>
        <end>5264</end>
        <line>153</line>
        <description>java.text.Normalizer.normalize(s, NFC)</description>
        <symbolName>java.text.Normalizer.normalize</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>50</id>
        <start>2079</start>
        <end>2128</end>
        <line>50</line>
        <description>Host.apply(Encoder.decode(scala.Option.apply[String](sHost).getOrElse[String](&quot;&quot;)))
        </description>
        <symbolName>com.agilogy.uri.Host.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>&lt;none&gt;</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>364</id>
        <start>7720</start>
        <end>7780</end>
        <line>182</line>
        <description>&quot;^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?&quot;</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Literal</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>read</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>400</id>
        <start>8654</start>
        <end>8668</end>
        <line>217</line>
        <description>res.toString()</description>
        <symbolName>scala.collection.mutable.StringBuilder.toString</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>parseTry</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>59</id>
        <start>2487</start>
        <end>2513</end>
        <line>62</line>
        <description>AuthorityParseException.apply(e)</description>
        <symbolName>com.agilogy.uri.AuthorityParseException.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>readUntil</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>373</id>
        <start>8226</start>
        <end>8237</end>
        <line>198</line>
        <description>i.&gt;=(length)</description>
        <symbolName>scala.Int.&gt;=</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>32</id>
        <start>1477</start>
        <end>1487</end>
        <line>40</line>
        <description>scala.Some.apply[com.agilogy.uri.Port](port)</description>
        <symbolName>scala.Some.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>41</id>
        <start>1723</start>
        <end>1767</end>
        <line>42</line>
        <description>Authority.apply(UserInfo.apply(userInfo), Host.apply(host), x$2)</description>
        <symbolName>com.agilogy.uri.Authority.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>&lt;none&gt;</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>68</id>
        <start>384</start>
        <end>393</end>
        <line>13</line>
        <description>Encoder.this.subDelims</description>
        <symbolName>com.agilogy.uri.Encoder.subDelims</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>readUntil</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>382</id>
        <start>8402</start>
        <end>8408</end>
        <line>203</line>
        <description>i.+(1)</description>
        <symbolName>scala.Int.+</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/UriPart.scala</source>
        <package>com.agilogy.uri</package>
        <class>UriPart</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.UriPart</fullClassName>
        <method>asciiStringValue</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/UriPart.scala</path>
        <id>481</id>
        <start>101</start>
        <end>133</end>
        <line>6</line>
        <description>Encoder.asciiEncode(UriPart.this.stringValue)</description>
        <symbolName>com.agilogy.uri.Encoder.asciiEncode</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>454</id>
        <start>9625</start>
        <end>9685</end>
        <line>263</line>
        <description>scala.Predef.println(scala.StringContext.apply(&quot;s = \'&quot;, &quot;\', a = \'&quot;, &quot;\',
            p = \'&quot;, &quot;\', q = \'&quot;, &quot;\', f = \'&quot;, &quot;\'&quot;).s(s, a, p, q, f))
        </description>
        <symbolName>scala.Predef.println</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quote</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>140</id>
        <start>3093</start>
        <end>3431</end>
        <line>86</line>
        <description>if (scala.Predef.charWrapper(c).isLetterOrDigit.||(allowedChars.contains(c)))
            sb.append(c)
            else
            sb.append(Encoder.this.pctEncode(c))
        </description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>If</treeName>
        <branch>true</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>isValidScheme</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>113</id>
        <start>1789</start>
        <end>1806</end>
        <line>51</line>
        <description>Encoder.this.isValidSchemeChar(c)</description>
        <symbolName>com.agilogy.uri.Encoder.isValidSchemeChar</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quoteAuthority</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>149</id>
        <start>4543</start>
        <end>4561</end>
        <line>136</line>
        <description>a.host.stringValue</description>
        <symbolName>com.agilogy.uri.Host.stringValue</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>346</id>
        <start>6109</start>
        <end>6151</end>
        <line>151</line>
        <description>AuthorityPathQUri.apply(scheme, authority, p, q)</description>
        <symbolName>com.agilogy.uri.AuthorityPathQUri.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>noAuthority</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>355</id>
        <start>6988</start>
        <end>7024</end>
        <line>168</line>
        <description>NoAuthorityPathFUri.apply(scheme, path, f)</description>
        <symbolName>com.agilogy.uri.NoAuthorityPathFUri.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>read</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>394</id>
        <start>8605</start>
        <end>8618</end>
        <line>214</line>
        <description>res.append(i)</description>
        <symbolName>scala.collection.mutable.StringBuilder.append</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>53</id>
        <start>2206</start>
        <end>2253</end>
        <line>52</line>
        <description>scala.Option.apply[String](sPort).map[com.agilogy.uri.Port](((p: String) =&gt;
            Port.apply(scala.Predef.augmentString(p).toInt).right.get))
        </description>
        <symbolName>scala.Option.map</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>parseTry</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>367</id>
        <start>7902</start>
        <end>7922</end>
        <line>187</line>
        <description>UriParseException.apply(e)</description>
        <symbolName>com.agilogy.uri.UriParseException.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>403</id>
        <start>8722</start>
        <end>8756</end>
        <line>221</line>
        <description>readUntil(scala.Predef.Set.apply[Char](':', '/', '?', '#'))</description>
        <symbolName>com.agilogy.uri.Uri.readUntil</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>&lt;none&gt;</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>62</id>
        <start>188</start>
        <end>201</end>
        <line>9</line>
        <description>&quot;!$&amp;\'()*+,;=&quot;</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Literal</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quote</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>134</id>
        <start>3097</start>
        <end>3142</end>
        <line>86</line>
        <description>scala.Predef.charWrapper(c).isLetterOrDigit.||(allowedChars.contains(c))</description>
        <symbolName>scala.Boolean.||</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>35</id>
        <start>1568</start>
        <end>1592</end>
        <line>41</line>
        <description>scala.Some.apply[com.agilogy.uri.UserInfo](UserInfo.apply(userInfo))</description>
        <symbolName>scala.Some.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>readUntil</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>376</id>
        <start>8273</start>
        <end>8297</end>
        <line>200</line>
        <description>scala.`package`.StringBuilder.newBuilder</description>
        <symbolName>scala.collection.mutable.StringBuilder.newBuilder</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Port</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.Port</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>8</id>
        <start>577</start>
        <end>580</end>
        <line>21</line>
        <description>new $anon()</description>
        <symbolName>com.agilogy.uri.Port.$anon.&lt;init&gt;</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>noAuthority</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>349</id>
        <start>6430</start>
        <end>6443</end>
        <line>158</line>
        <description>Path.apply(segment)</description>
        <symbolName>com.agilogy.uri.Path.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>&lt;none&gt;</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>44</id>
        <start>1798</start>
        <end>1839</end>
        <line>44</line>
        <description>scala.Predef.augmentString(&quot;(([^/?#@]*)@)?([^/?#@:]*)(:([0-9]*))?&quot;).r</description>
        <symbolName>scala.collection.immutable.StringLike.r</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>17</id>
        <start>974</start>
        <end>988</end>
        <line>35</line>
        <description>scala.Some.apply[com.agilogy.uri.UserInfo](userInfo)</description>
        <symbolName>scala.Some.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>noAuthority</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>358</id>
        <start>7062</start>
        <end>7109</end>
        <line>169</line>
        <description>scala.`package`.Right.apply[Nothing,
            com.agilogy.uri.NoAuthorityPathQFUri](NoAuthorityPathQFUri.apply(scheme, path, q, f))
        </description>
        <symbolName>scala.util.Right.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>430</id>
        <start>9135</start>
        <end>9165</end>
        <line>237</line>
        <description>scala.Some.apply[String](readUntil(scala.Predef.Set.apply[Char]('?', '#')))</description>
        <symbolName>scala.Some.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>26</id>
        <start>1245</start>
        <end>1255</end>
        <line>38</line>
        <description>Host.apply(host)</description>
        <symbolName>com.agilogy.uri.Host.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quote</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>125</id>
        <start>2921</start>
        <end>2933</end>
        <line>80</line>
        <description>Encoder.this.pctEncode(l)</description>
        <symbolName>com.agilogy.uri.Encoder.pctEncode</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>NoAuthorityPathUri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.NoAuthorityPathUri</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>304</id>
        <start>2910</start>
        <end>2971</end>
        <line>99</line>
        <description>scala.`package`.Left.apply[com.agilogy.uri.PathStartsWithDoubleSlashInNoAuhtorityUri,
            Nothing](PathStartsWithDoubleSlashInNoAuhtorityUri.apply(scheme, path))
        </description>
        <symbolName>scala.util.Left.apply</symbolName>
        <treeName>Block</treeName>
        <branch>true</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>331</id>
        <start>5144</start>
        <end>5165</end>
        <line>140</line>
        <description>NoAuthorityPathUri.apply(s)</description>
        <symbolName>com.agilogy.uri.NoAuthorityPathUri.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>340</id>
        <start>5576</start>
        <end>5616</end>
        <line>145</line>
        <description>Uri.apply(scheme, Authority.apply(Host.apply(host), port))</description>
        <symbolName>com.agilogy.uri.Uri.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>421</id>
        <start>9040</start>
        <end>9044</end>
        <line>233</line>
        <description>scala.None</description>
        <symbolName>scala.None</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>pctEncode</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>80</id>
        <start>767</start>
        <end>780</end>
        <line>21</line>
        <description>c.&lt;=('\u000F')</description>
        <symbolName>scala.Char.&lt;=</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>pctEncode</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>89</id>
        <start>876</start>
        <end>922</end>
        <line>24</line>
        <description>&quot;%&quot;.+(java.lang.Integer.toHexString(c.toInt).toUpperCase())</description>
        <symbolName>java.lang.String.+</symbolName>
        <treeName>Block</treeName>
        <branch>true</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>FragmentUri</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.FragmentUri</fullClassName>
        <method>fragment</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>286</id>
        <start>1668</start>
        <end>1679</end>
        <line>75</line>
        <description>FragmentUri.this.theFragment</description>
        <symbolName>com.agilogy.uri.FragmentUri.theFragment</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>NoAuthorityPathUri</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.NoAuthorityPathUri</fullClassName>
        <method>?</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>295</id>
        <start>2200</start>
        <end>2236</end>
        <line>86</line>
        <description>NoAuthorityPathQUri.apply(NoAuthorityPathUri.this.scheme, NoAuthorityPathUri.this.path, q)
        </description>
        <symbolName>com.agilogy.uri.NoAuthorityPathQUri.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>448</id>
        <start>9380</start>
        <end>9419</end>
        <line>249</line>
        <description>{
            i = i.+(1);
            scala.Some.apply[String](read())
            }
        </description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Block</treeName>
        <branch>true</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>457</id>
        <start>9736</start>
        <end>9790</end>
        <line>264</line>
        <description>validation.Validation.notNull[com.agilogy.uri.MissingScheme, String](MissingScheme.apply(value),
            s).flatMap[Product with Serializable with com.agilogy.uri.SchemeError, com.agilogy.uri.Scheme]({
            ((v: String) =&gt; Scheme.apply(v))
            })
        </description>
        <symbolName>scala.util.Either.flatMap</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>asciiEncode</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>116</id>
        <start>2086</start>
        <end>2108</end>
        <line>61</line>
        <description>JavaNetCodec.encode(s)</description>
        <symbolName>com.agilogy.uri.JavaNetCodec.encode</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>439</id>
        <start>9269</start>
        <end>9294</end>
        <line>244</line>
        <description>scala.Some.apply[String](readUntil(scala.Predef.Set.apply[Char]('#')))</description>
        <symbolName>scala.Some.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>412</id>
        <start>8899</start>
        <end>8900</end>
        <line>229</line>
        <description>1</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Literal</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>isAlpha</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>98</id>
        <start>1433</start>
        <end>1436</end>
        <line>42</line>
        <description>'A'</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Literal</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>&lt;none&gt;</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>71</id>
        <start>456</start>
        <end>465</end>
        <line>14</line>
        <description>Encoder.this.subDelims</description>
        <symbolName>com.agilogy.uri.Encoder.subDelims</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>isValidSchemeChar</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>107</id>
        <start>1654</start>
        <end>1677</end>
        <line>48</line>
        <description>Encoder.this.schemeChars.contains(c)</description>
        <symbolName>scala.collection.SetLike.contains</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>AuthorityPathUri</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.AuthorityPathUri</fullClassName>
        <method>/</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>313</id>
        <start>4082</start>
        <end>4082</end>
        <line>121</line>
        <description>this.copy$default$1</description>
        <symbolName>com.agilogy.uri.AuthorityPathUri.copy$default$1</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>AuthorityPathUri</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.AuthorityPathUri</fullClassName>
        <method>##</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>322</id>
        <start>4330</start>
        <end>4336</end>
        <line>126</line>
        <description>AuthorityPathUri.this.scheme</description>
        <symbolName>com.agilogy.uri.AuthorityPathUri.scheme</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>readUntil</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>385</id>
        <start>8306</start>
        <end>8306</end>
        <line>201</line>
        <description>()</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Literal</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>stringValue</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>11</id>
        <start>728</start>
        <end>756</end>
        <line>27</line>
        <description>Encoder.quoteAuthority(this)</description>
        <symbolName>com.agilogy.uri.Encoder.quoteAuthority</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>NoAuthorityPathUri</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.NoAuthorityPathUri</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>307</id>
        <start>3134</start>
        <end>3180</end>
        <line>102</line>
        <description>scala.`package`.Right.apply[Nothing, com.agilogy.uri.NoAuthorityPathUri]({
            final class $anon extends NoAuthorityPathUri {
            def &lt;init&gt;(): &lt;$anon: com.agilogy.uri.NoAuthorityPathUri&gt; = {
            $anon.super.&lt;init&gt;(scheme, path);
            ()
            };
            &lt;empty&gt;
            };
            new $anon()
            })
        </description>
        <symbolName>scala.util.Right.apply</symbolName>
        <treeName>Block</treeName>
        <branch>true</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>readUntil</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>388</id>
        <start>8253</start>
        <end>8449</end>
        <line>199</line>
        <description>{
            val res: StringBuilder = scala.`package`.StringBuilder.newBuilder;
            while$1(){
            if (i.&lt;(length).&amp;&amp;(delimiters.contains(chars.apply(i)).unary_!))
            {
            {
            res.append(chars.apply(i));
            i = i.+(1)
            };
            while$1()
            }
            else
            ()
            };
            res.toString()
            }
        </description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Block</treeName>
        <branch>true</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>&lt;none&gt;</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>74</id>
        <start>526</start>
        <end>530</end>
        <line>15</line>
        <description>&quot;:@&quot;</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Literal</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>read</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>397</id>
        <start>8593</start>
        <end>8645</end>
        <line>213</line>
        <description>{
            {
            res.append(i);
            i = i.+(1)
            };
            while$2()
            }
        </description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Block</treeName>
        <branch>true</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>56</id>
        <start>2361</start>
        <end>2383</end>
        <line>56</line>
        <description>AuthorityParseError.apply(s)</description>
        <symbolName>com.agilogy.uri.AuthorityParseError.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Segment.scala</source>
        <package>com.agilogy.uri</package>
        <class>Segment</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Segment</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Segment.scala</path>
        <id>262</id>
        <start>653</start>
        <end>681</end>
        <line>22</line>
        <description>NonEmptySegment.apply(stringValue)</description>
        <symbolName>com.agilogy.uri.NonEmptySegment.apply</symbolName>
        <treeName>Block</treeName>
        <branch>true</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>NoAuthorityPathUri</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.NoAuthorityPathUri</fullClassName>
        <method>##</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>298</id>
        <start>2292</start>
        <end>2328</end>
        <line>88</line>
        <description>NoAuthorityPathFUri.apply(NoAuthorityPathUri.this.scheme, NoAuthorityPathUri.this.path, f)
        </description>
        <symbolName>com.agilogy.uri.NoAuthorityPathFUri.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>370</id>
        <start>8102</start>
        <end>8117</end>
        <line>193</line>
        <description>uri.toCharArray()</description>
        <symbolName>java.lang.String.toCharArray</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>29</id>
        <start>1350</start>
        <end>1374</end>
        <line>39</line>
        <description>Authority.apply(Host.apply(host), x$1)</description>
        <symbolName>com.agilogy.uri.Authority.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>343</id>
        <start>5732</start>
        <end>5769</end>
        <line>146</line>
        <description>Uri.apply(scheme, Authority.apply(Host.apply(host), p))</description>
        <symbolName>com.agilogy.uri.Uri.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>38</id>
        <start>1558</start>
        <end>1617</end>
        <line>41</line>
        <description>Authority.apply(scala.Some.apply[com.agilogy.uri.UserInfo](UserInfo.apply(userInfo)),
            Host.apply(host), scala.Some.apply[com.agilogy.uri.Port](port))
        </description>
        <symbolName>com.agilogy.uri.Authority.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>readUntil</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>379</id>
        <start>8313</start>
        <end>8357</end>
        <line>201</line>
        <description>i.&lt;(length).&amp;&amp;(delimiters.contains(chars.apply(i)).unary_!)</description>
        <symbolName>scala.Boolean.&amp;&amp;</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>noAuthority</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>352</id>
        <start>6833</start>
        <end>6865</end>
        <line>166</line>
        <description>NoAuthorityPathUri.apply(scheme, path)</description>
        <symbolName>com.agilogy.uri.NoAuthorityPathUri.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>47</id>
        <start>2002</start>
        <end>2059</end>
        <line>49</line>
        <description>scala.Option.apply[String](sUserInfo).map[com.agilogy.uri.UserInfo](((ui: String) =&gt;
            UserInfo.apply(Encoder.decode(ui))))
        </description>
        <symbolName>scala.Option.map</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>EmptyPath</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.EmptyPath</fullClassName>
        <method>segments</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>244</id>
        <start>5799</start>
        <end>5808</end>
        <line>170</line>
        <description>scala.collection.Seq.empty[Nothing]</description>
        <symbolName>scala.collection.generic.GenericCompanion.empty</symbolName>
        <treeName>TypeApply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>RootlessPath</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.RootlessPath</fullClassName>
        <method>stringValue</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>226</id>
        <start>4267</start>
        <end>4323</end>
        <line>124</line>
        <description>RootlessPath.this.segments.map[String, Seq[String]](((s: com.agilogy.uri.Segment) =&gt;
            Encoder.quoteSegment(s)))(collection.this.Seq.canBuildFrom[String]).mkString(&quot;/&quot;)
        </description>
        <symbolName>scala.collection.TraversableOnce.mkString</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Scheme.scala</source>
        <package>com.agilogy.uri</package>
        <class>Scheme</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.Scheme</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Scheme.scala</path>
        <id>253</id>
        <start>313</start>
        <end>316</end>
        <line>11</line>
        <description>new $anon()</description>
        <symbolName>com.agilogy.uri.Scheme.$anon.&lt;init&gt;</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>AuthorityPathUri</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.AuthorityPathUri</fullClassName>
        <method>##</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>325</id>
        <start>4312</start>
        <end>4360</end>
        <line>126</line>
        <description>AuthorityPathFUri.apply(AuthorityPathUri.this.scheme, AuthorityPathUri.this.theAuthority,
            AuthorityPathUri.this.path, f)
        </description>
        <symbolName>com.agilogy.uri.AuthorityPathFUri.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>of</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>361</id>
        <start>7445</start>
        <end>7479</end>
        <line>176</line>
        <description>Uri.apply(scheme, a, p, query, fragment)</description>
        <symbolName>com.agilogy.uri.Uri.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>20</id>
        <start>1069</start>
        <end>1087</end>
        <line>36</line>
        <description>UserInfo.apply(userInfo)</description>
        <symbolName>com.agilogy.uri.UserInfo.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>334</id>
        <start>5362</start>
        <end>5404</end>
        <line>143</line>
        <description>AuthorityPathUri.apply(s, authority, Path.empty)</description>
        <symbolName>com.agilogy.uri.AuthorityPathUri.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Port</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.Port</fullClassName>
        <method>&lt;none&gt;</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>2</id>
        <start>393</start>
        <end>410</end>
        <line>14</line>
        <description>Port.this.intValue.toString()</description>
        <symbolName>scala.Any.toString</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>ConsRootlessPath</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.ConsRootlessPath</fullClassName>
        <method>segments</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>235</id>
        <start>4917</start>
        <end>4924</end>
        <line>141</line>
        <description>ConsRootlessPath.this.segment</description>
        <symbolName>com.agilogy.uri.ConsRootlessPath.segment</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>NoAuthorityPathUri</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.NoAuthorityPathUri</fullClassName>
        <method>/</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>289</id>
        <start>2029</start>
        <end>2037</end>
        <line>83</line>
        <description>NoAuthorityPathUri.this.path./(s)</description>
        <symbolName>com.agilogy.uri.Path./</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>AuthorityPathUri</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.AuthorityPathUri</fullClassName>
        <method>/</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>316</id>
        <start>4150</start>
        <end>4160</end>
        <line>122</line>
        <description>Segment.apply(s)</description>
        <symbolName>com.agilogy.uri.Segment.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>&lt;none&gt;</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>65</id>
        <start>287</start>
        <end>299</end>
        <line>11</line>
        <description>scala.Predef.augmentString(&quot;-._~&quot;).toSet[Char]</description>
        <symbolName>scala.collection.TraversableOnce.toSet</symbolName>
        <treeName>TypeApply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>AuthorityUri</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.AuthorityUri</fullClassName>
        <method>authority</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>271</id>
        <start>784</start>
        <end>802</end>
        <line>39</line>
        <description>scala.Some.apply[com.agilogy.uri.Authority](AuthorityUri.this.theAuthority)</description>
        <symbolName>scala.Some.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>NoFragmentUri</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.NoFragmentUri</fullClassName>
        <method>f</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>280</id>
        <start>1238</start>
        <end>1257</end>
        <line>59</line>
        <description>this.##(Fragment.apply(f))</description>
        <symbolName>com.agilogy.uri.NoFragmentUri.##</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Port</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Port</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>5</id>
        <start>545</start>
        <end>560</end>
        <line>20</line>
        <description>NegativePort.apply(v)</description>
        <symbolName>com.agilogy.uri.NegativePort.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>AuthorityPathUri</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.AuthorityPathUri</fullClassName>
        <method>?</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>319</id>
        <start>4236</start>
        <end>4248</end>
        <line>124</line>
        <description>AuthorityPathUri.this.theAuthority</description>
        <symbolName>com.agilogy.uri.AuthorityPathUri.theAuthority</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</source>
        <package>validation</package>
        <class>Validation</class>
        <classType>Trait</classType>
        <fullClassName>validation.Validation</fullClassName>
        <method>notNull</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</path>
        <id>516</id>
        <start>4052</start>
        <end>4063</end>
        <line>67</line>
        <description>scala.`package`.Left.apply[E, Nothing](error)</description>
        <symbolName>scala.util.Left.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>Path</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Path</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>184</id>
        <start>1214</start>
        <end>1224</end>
        <line>33</line>
        <description>Path.empty</description>
        <symbolName>com.agilogy.uri.Path.empty</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>Path</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Path</fullClassName>
        <method>&lt;none&gt;</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>193</id>
        <start>1754</start>
        <end>1777</end>
        <line>47</line>
        <description>scala.Predef.augmentString(&quot;([^?#/]+)(/[^?#]*)*&quot;).r</description>
        <symbolName>scala.collection.immutable.StringLike.r</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>toJava</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>265</id>
        <start>420</start>
        <end>449</end>
        <line>23</line>
        <description>new java.net.URI(Uri.this.stringValue)</description>
        <symbolName>java.net.URI.&lt;init&gt;</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>NoAuthorityPathUri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.NoAuthorityPathUri</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>301</id>
        <start>2867</start>
        <end>2900</end>
        <line>98</line>
        <description>path.stringValue.startsWith(&quot;//&quot;)</description>
        <symbolName>java.lang.String.startsWith</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/UriPart.scala</source>
        <package>com.agilogy.uri</package>
        <class>UriPart</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.UriPart</fullClassName>
        <method>asciiStringValue</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/UriPart.scala</path>
        <id>480</id>
        <start>121</start>
        <end>132</end>
        <line>6</line>
        <description>UriPart.this.stringValue</description>
        <symbolName>com.agilogy.uri.UriPart.stringValue</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>Path</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.Path</fullClassName>
        <method>isEmpty</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>175</id>
        <start>543</start>
        <end>569</end>
        <line>18</line>
        <description>Path.this.pathType.==(PathType.Empty)</description>
        <symbolName>java.lang.Object.==</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Segment.scala</source>
        <package>com.agilogy.uri</package>
        <class>NonEmptySegment</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.NonEmptySegment</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Segment.scala</path>
        <id>256</id>
        <start>365</start>
        <end>368</end>
        <line>12</line>
        <description>new $anon()</description>
        <symbolName>com.agilogy.uri.NonEmptySegment.$anon.&lt;init&gt;</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>337</id>
        <start>5467</start>
        <end>5501</end>
        <line>144</line>
        <description>Uri.apply(scheme, Authority.apply(Host.apply(host)))</description>
        <symbolName>com.agilogy.uri.Uri.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>Path</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Path</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>211</id>
        <start>2457</start>
        <end>2480</end>
        <line>64</line>
        <description>Path.rootless(h, (t: _*))</description>
        <symbolName>com.agilogy.uri.Path.rootless</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>NoQueryFragmentUri</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.NoQueryFragmentUri</fullClassName>
        <method>q</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>283</id>
        <start>1494</start>
        <end>1506</end>
        <line>67</line>
        <description>this.?(query)</description>
        <symbolName>com.agilogy.uri.NoQueryFragmentUri.?</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>NoAuthorityPathUri</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.NoAuthorityPathUri</fullClassName>
        <method>/</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>292</id>
        <start>2131</start>
        <end>2148</end>
        <line>84</line>
        <description>this./(Segment.apply(s))</description>
        <symbolName>com.agilogy.uri.NoAuthorityPathUri./</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</source>
        <package>validation</package>
        <class>NoAuthorityPathUriVOps</class>
        <classType>Class</classType>
        <fullClassName>validation.Validation.NoAuthorityPathUriVOps</fullClassName>
        <method>q</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</path>
        <id>498</id>
        <start>1413</start>
        <end>1432</end>
        <line>25</line>
        <description>NoAuthorityPathUriVOps.this.self.map[com.agilogy.uri.NoAuthorityPathQUri](((x$6:
            com.agilogy.uri.NoAuthorityPathUri) =&gt; x$6.q(query)))
        </description>
        <symbolName>scala.util.Either.map</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</source>
        <package>validation</package>
        <class>NoAuthorityPathQUriVOps</class>
        <classType>Class</classType>
        <fullClassName>validation.Validation.NoAuthorityPathQUriVOps</fullClassName>
        <method>##</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</path>
        <id>507</id>
        <start>2183</start>
        <end>2196</end>
        <line>34</line>
        <description>x$11.##(fragment)</description>
        <symbolName>com.agilogy.uri.NoAuthorityPathQUri.##</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quoteUri</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>166</id>
        <start>5131</start>
        <end>5177</end>
        <line>150</line>
        <description>scala.StringContext.apply(&quot;&quot;, &quot;:&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;,
            &quot;&quot;).s(sScheme, sAuthority, sPath, sQuery, sFragment)
        </description>
        <symbolName>scala.StringContext.s</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Query.scala</source>
        <package>com.agilogy.uri</package>
        <class>Query</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.Query</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Query.scala</path>
        <id>247</id>
        <start>217</start>
        <end>220</end>
        <line>8</line>
        <description>new $anon()</description>
        <symbolName>com.agilogy.uri.Query.$anon.&lt;init&gt;</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>QueryUri</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.QueryUri</fullClassName>
        <method>query</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>274</id>
        <start>966</start>
        <end>980</end>
        <line>48</line>
        <description>scala.Some.apply[com.agilogy.uri.Query](QueryUri.this.theQuery)</description>
        <symbolName>scala.Some.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>14</id>
        <start>818</start>
        <end>845</end>
        <line>33</line>
        <description>Authority.apply(scala.None, host, scala.None)</description>
        <symbolName>com.agilogy.uri.Authority.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>AuthorityPathQUri</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.AuthorityPathQUri</fullClassName>
        <method>##</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>328</id>
        <start>4687</start>
        <end>4691</end>
        <line>131</line>
        <description>AuthorityPathQUri.this.path</description>
        <symbolName>com.agilogy.uri.AuthorityPathQUri.path</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</source>
        <package>validation</package>
        <class>NoAuthorityPathUriVOps</class>
        <classType>Class</classType>
        <fullClassName>validation.Validation.NoAuthorityPathUriVOps</fullClassName>
        <method>/</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</path>
        <id>489</id>
        <start>947</start>
        <end>957</end>
        <line>20</line>
        <description>com.agilogy.uri.Segment.apply(s)</description>
        <symbolName>com.agilogy.uri.Segment.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>AbsolutePath</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.AbsolutePath</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>220</id>
        <start>3696</start>
        <end>3701</end>
        <line>104</line>
        <description>x$1./(x$2)</description>
        <symbolName>com.agilogy.uri.AbsolutePath./</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>RootlessPath</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.RootlessPath</fullClassName>
        <method>toString</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>229</id>
        <start>4376</start>
        <end>4387</end>
        <line>125</line>
        <description>RootlessPath.this.stringValue</description>
        <symbolName>com.agilogy.uri.RootlessPath.stringValue</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>Path</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Path</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>202</id>
        <start>2184</start>
        <end>2220</end>
        <line>60</line>
        <description>scala.Option.apply[String](segmentsOrNull).getOrElse[String](&quot;&quot;)</description>
        <symbolName>scala.Option.getOrElse</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>AbsoluteSingleSegmentPath</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.AbsoluteSingleSegmentPath</fullClassName>
        <method>segments</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>238</id>
        <start>5080</start>
        <end>5087</end>
        <line>147</line>
        <description>AbsoluteSingleSegmentPath.this.segment</description>
        <symbolName>com.agilogy.uri.AbsoluteSingleSegmentPath.segment</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>NoAuthorityPathQUri</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.NoAuthorityPathQUri</fullClassName>
        <method>##</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>310</id>
        <start>3477</start>
        <end>3485</end>
        <line>110</line>
        <description>NoAuthorityPathQUri.this.theQuery</description>
        <symbolName>com.agilogy.uri.NoAuthorityPathQUri.theQuery</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>NoFragmentUri</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.NoFragmentUri</fullClassName>
        <method>##</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>277</id>
        <start>1156</start>
        <end>1175</end>
        <line>57</line>
        <description>this.##(Fragment.apply(f))</description>
        <symbolName>com.agilogy.uri.NoFragmentUri.##</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>474</id>
        <start>10330</start>
        <end>10396</end>
        <line>274</line>
        <description>scala.`package`.Left.apply[com.agilogy.uri.UriParseError,
            Nothing](UriParseError.apply(scheme.left.toOption, authority.left.toOption))
        </description>
        <symbolName>scala.util.Left.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</source>
        <package>validation</package>
        <class>Validation</class>
        <classType>Trait</classType>
        <fullClassName>validation.Validation</fullClassName>
        <method>sequence</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</path>
        <id>483</id>
        <start>303</start>
        <end>320</end>
        <line>10</line>
        <description>x$1.map[Some[R]]({
            ((value: R) =&gt; scala.Some.apply[R](value))
            })
        </description>
        <symbolName>scala.util.Either.map</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quote</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>142</id>
        <start>2340</start>
        <end>3437</end>
        <line>69</line>
        <description>{
            {
            val c: Char = i.next();
            if (scala.Predef.charWrapper(c).isHighSurrogate.&amp;&amp;(i.hasNext))
            {
            val l: Char = i.next();
            if (scala.Predef.charWrapper(l).isLowSurrogate.unary_!)
            sb.append(Encoder.this.pctEncode(l))
            else
            sb.append(JavaNetCodec.encode(&quot;&quot;.+(c).+(l)))
            }
            else
            if (scala.Predef.charWrapper(c).isLetterOrDigit.||(allowedChars.contains(c)))
            sb.append(c)
            else
            sb.append(Encoder.this.pctEncode(c))
            };
            while$1()
            }
        </description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Block</treeName>
        <branch>true</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</source>
        <package>validation</package>
        <class>NoAuthorityPathUriVOps</class>
        <classType>Class</classType>
        <fullClassName>validation.Validation.NoAuthorityPathUriVOps</fullClassName>
        <method>?</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</path>
        <id>492</id>
        <start>1057</start>
        <end>1076</end>
        <line>22</line>
        <description>NoAuthorityPathUriVOps.this.self.map[com.agilogy.uri.NoAuthorityPathQUri](((x$3:
            com.agilogy.uri.NoAuthorityPathUri) =&gt; x$3.?(query)))
        </description>
        <symbolName>scala.util.Either.map</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quoteAuthority</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>151</id>
        <start>4529</start>
        <end>4591</end>
        <line>136</line>
        <description>Encoder.quote(a.host.stringValue, Encoder.registeredNameChars)</description>
        <symbolName>com.agilogy.uri.Encoder.quote</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>NonEmptyAbsolutePath</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.NonEmptyAbsolutePath</fullClassName>
        <method>segments</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>223</id>
        <start>3889</start>
        <end>3889</end>
        <line>109</line>
        <description>collection.this.Seq.canBuildFrom[com.agilogy.uri.Segment]</description>
        <symbolName>scala.collection.Seq.canBuildFrom</symbolName>
        <treeName>TypeApply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Scheme.scala</source>
        <package>com.agilogy.uri</package>
        <class>Scheme</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Scheme</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Scheme.scala</path>
        <id>250</id>
        <start>276</start>
        <end>296</end>
        <line>10</line>
        <description>IllegalSchemeName.apply(v)</description>
        <symbolName>com.agilogy.uri.IllegalSchemeName.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>RootlessPath</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.RootlessPath</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>232</id>
        <start>4563</start>
        <end>4568</end>
        <line>131</line>
        <description>x$3./(x$4)</description>
        <symbolName>com.agilogy.uri.Path./</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Segment.scala</source>
        <package>com.agilogy.uri</package>
        <class>Segment</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Segment</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Segment.scala</path>
        <id>259</id>
        <start>642</start>
        <end>647</end>
        <line>22</line>
        <description>Segment.this.Empty</description>
        <symbolName>com.agilogy.uri.Segment.Empty</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>438</id>
        <start>9274</start>
        <end>9293</end>
        <line>244</line>
        <description>readUntil(scala.Predef.Set.apply[Char]('#'))</description>
        <symbolName>com.agilogy.uri.Uri.readUntil</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quote</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>124</id>
        <start>2711</start>
        <end>2728</end>
        <line>78</line>
        <description>scala.Predef.charWrapper(l).isLowSurrogate.unary_!</description>
        <symbolName>scala.Boolean.unary_!</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>447</id>
        <start>9401</start>
        <end>9413</end>
        <line>251</line>
        <description>scala.Some.apply[String](read())</description>
        <symbolName>scala.Some.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quote</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>133</id>
        <start>3118</start>
        <end>3142</end>
        <line>86</line>
        <description>allowedChars.contains(c)</description>
        <symbolName>scala.collection.SetLike.contains</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>isAlphaNum</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>106</id>
        <start>1559</start>
        <end>1583</end>
        <line>46</line>
        <description>Encoder.this.isAlpha(c).||(Encoder.this.isDigit(c))</description>
        <symbolName>scala.Boolean.||</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>Path</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Path</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>205</id>
        <start>2347</start>
        <end>2374</end>
        <line>62</line>
        <description>Encoder.decode(headSegment)</description>
        <symbolName>com.agilogy.uri.Encoder.decode</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>AbsolutePath</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.AbsolutePath</fullClassName>
        <method>stringValue</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>214</id>
        <start>3414</start>
        <end>3475</end>
        <line>97</line>
        <description>AbsolutePath.this.segments.map[String, Seq[String]](((s: com.agilogy.uri.Segment) =&gt; &quot;/&quot;.+(Encoder.quoteSegment(s))))(collection.this.Seq.canBuildFrom[String]).mkString(&quot;&quot;)</description>
        <symbolName>scala.collection.TraversableOnce.mkString</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>420</id>
        <start>8953</start>
        <end>9024</end>
        <line>229</line>
        <description>{
            i = i.+(2);
            scala.Some.apply[String](readUntil(scala.Predef.Set.apply[Char]('/', '?', '#')))
            }
        </description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Block</treeName>
        <branch>true</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>429</id>
        <start>9140</start>
        <end>9164</end>
        <line>237</line>
        <description>readUntil(scala.Predef.Set.apply[Char]('?', '#'))</description>
        <symbolName>com.agilogy.uri.Uri.readUntil</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</source>
        <package>validation</package>
        <class>NoAuthorityPathUriVOps</class>
        <classType>Class</classType>
        <fullClassName>validation.Validation.NoAuthorityPathUriVOps</fullClassName>
        <method>##</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</path>
        <id>501</id>
        <start>1675</start>
        <end>1688</end>
        <line>28</line>
        <description>x$8.##(fragment)</description>
        <symbolName>com.agilogy.uri.NoFragmentUri.##</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quoteSegment</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>160</id>
        <start>4689</start>
        <end>4743</end>
        <line>141</line>
        <description>Encoder.quote(s.stringValue, Encoder.pathSegmentChars)</description>
        <symbolName>com.agilogy.uri.Encoder.quote</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</source>
        <package>validation</package>
        <class>NoAuthorityPathQUriVOps</class>
        <classType>Class</classType>
        <fullClassName>validation.Validation.NoAuthorityPathQUriVOps</fullClassName>
        <method>##</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</path>
        <id>510</id>
        <start>2302</start>
        <end>2325</end>
        <line>35</line>
        <description>NoAuthorityPathQUriVOps.this.self.map[com.agilogy.uri.NoAuthorityPathQFUri](((x$12:
            com.agilogy.uri.NoAuthorityPathQUri) =&gt; x$12.##(fragment)))
        </description>
        <symbolName>scala.util.Either.map</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Host.scala</source>
        <package>com.agilogy.uri</package>
        <class>Host</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.Host</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Host.scala</path>
        <id>169</id>
        <start>272</start>
        <end>275</end>
        <line>11</line>
        <description>new $anon()</description>
        <symbolName>com.agilogy.uri.Host.$anon.&lt;init&gt;</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>Path</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Path</fullClassName>
        <method>&lt;none&gt;</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>178</id>
        <start>903</start>
        <end>912</end>
        <line>28</line>
        <description>Path./(&quot;&quot;)</description>
        <symbolName>com.agilogy.uri.Path./</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>456</id>
        <start>9777</start>
        <end>9789</end>
        <line>264</line>
        <description>Scheme.apply(v)</description>
        <symbolName>com.agilogy.uri.Scheme.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>465</id>
        <start>10046</start>
        <end>10082</end>
        <line>269</line>
        <description>q.map[com.agilogy.uri.Query](((q: String) =&gt; Query.apply(Encoder.decode(q))))</description>
        <symbolName>scala.Option.map</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>isValidScheme</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>115</id>
        <start>1727</start>
        <end>1807</end>
        <line>51</line>
        <description>v.!=(null).&amp;&amp;(v.length().&gt;(0)).&amp;&amp;(Encoder.this.isAlpha(v.charAt(0))).&amp;&amp;(scala.Predef.augmentString(v).forall({
            ((c: Char) =&gt; Encoder.this.isValidSchemeChar(c))
            }))
        </description>
        <symbolName>scala.Boolean.&amp;&amp;</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>Path</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Path</fullClassName>
        <method>absoluteOrEmpty</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>187</id>
        <start>1410</start>
        <end>1431</end>
        <line>40</line>
        <description>Path.this.absolute(h, (tail: _*))</description>
        <symbolName>com.agilogy.uri.Path.absolute</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>Path</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Path</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>196</id>
        <start>1885</start>
        <end>1895</end>
        <line>53</line>
        <description>Path.empty</description>
        <symbolName>com.agilogy.uri.Path.empty</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>RootlessSingleSegmentPath</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.RootlessSingleSegmentPath</fullClassName>
        <method>segments</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>241</id>
        <start>5359</start>
        <end>5371</end>
        <line>155</line>
        <description>
            scala.collection.Seq.apply[com.agilogy.uri.NonEmptySegment](RootlessSingleSegmentPath.this.segment)
        </description>
        <symbolName>scala.collection.generic.GenericCompanion.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>equals</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>268</id>
        <start>582</start>
        <end>587</end>
        <line>28</line>
        <description>false</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Literal</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>parseTry</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>369</id>
        <start>7945</start>
        <end>7955</end>
        <line>188</line>
        <description>scala.util.Success.apply[com.agilogy.uri.Uri](r)</description>
        <symbolName>scala.util.Success.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>441</id>
        <start>9314</start>
        <end>9318</end>
        <line>246</line>
        <description>scala.None</description>
        <symbolName>scala.None</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>Path</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Path</fullClassName>
        <method>/</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>181</id>
        <start>1039</start>
        <end>1056</end>
        <line>30</line>
        <description>Path./(Segment.apply(s))</description>
        <symbolName>com.agilogy.uri.Path./</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quoteUri</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>163</id>
        <start>4923</start>
        <end>4943</end>
        <line>147</line>
        <description>uri.path.stringValue</description>
        <symbolName>com.agilogy.uri.Path.stringValue</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/UriError.scala</source>
        <package>com.agilogy.uri</package>
        <class>UriParseError</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.UriParseError</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/UriError.scala</path>
        <id>477</id>
        <start>287</start>
        <end>326</end>
        <line>7</line>
        <description>scheme.isDefined.||(authority.isDefined)</description>
        <symbolName>scala.Boolean.||</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</source>
        <package>validation</package>
        <class>NoAuthorityPathQUriVOps</class>
        <classType>Class</classType>
        <fullClassName>validation.Validation.NoAuthorityPathQUriVOps</fullClassName>
        <method>f</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</path>
        <id>513</id>
        <start>2566</start>
        <end>2578</end>
        <line>37</line>
        <description>x$14.f(fragment)</description>
        <symbolName>com.agilogy.uri.NoFragmentUri.f</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>Path</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.Path</fullClassName>
        <method>isRootless</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>172</id>
        <start>500</start>
        <end>517</end>
        <line>17</line>
        <description>PathType.Rootless</description>
        <symbolName>com.agilogy.uri.PathType.Rootless</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>readUntil</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>387</id>
        <start>8427</start>
        <end>8441</end>
        <line>205</line>
        <description>res.toString()</description>
        <symbolName>scala.collection.mutable.StringBuilder.toString</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>46</id>
        <start>2030</start>
        <end>2058</end>
        <line>49</line>
        <description>UserInfo.apply(Encoder.decode(ui))</description>
        <symbolName>com.agilogy.uri.UserInfo.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>459</id>
        <start>9872</start>
        <end>9894</end>
        <line>265</line>
        <description>a.map[Either[com.agilogy.uri.AuthorityParseError,com.agilogy.uri.Authority]]({
            ((s: String) =&gt; Authority.parse(s))
            })
        </description>
        <symbolName>scala.Option.map</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>432</id>
        <start>9185</start>
        <end>9189</end>
        <line>239</line>
        <description>scala.None</description>
        <symbolName>scala.None</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quote</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>118</id>
        <start>2307</start>
        <end>2317</end>
        <line>68</line>
        <description>scala.Predef.augmentString(s).iterator</description>
        <symbolName>scala.collection.IndexedSeqLike.iterator</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>468</id>
        <start>10110</start>
        <end>10149</end>
        <line>270</line>
        <description>f.map[com.agilogy.uri.Fragment](((f: String) =&gt; Fragment.apply(Encoder.decode(f))))
        </description>
        <symbolName>scala.Option.map</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quote</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>127</id>
        <start>2911</start>
        <end>2934</end>
        <line>80</line>
        <description>sb.append(Encoder.this.pctEncode(l))</description>
        <symbolName>scala.collection.mutable.StringBuilder.append</symbolName>
        <treeName>Block</treeName>
        <branch>true</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quote</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>136</id>
        <start>3211</start>
        <end>3223</end>
        <line>88</line>
        <description>sb.append(c)</description>
        <symbolName>scala.collection.mutable.StringBuilder.append</symbolName>
        <treeName>Block</treeName>
        <branch>true</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>Path</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Path</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>199</id>
        <start>2048</start>
        <end>2074</end>
        <line>56</line>
        <description>Encoder.decode(m.group(1))</description>
        <symbolName>com.agilogy.uri.Encoder.decode</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>Path</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Path</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>208</id>
        <start>2421</start>
        <end>2447</end>
        <line>63</line>
        <description>Segment.apply(Encoder.decode(s))</description>
        <symbolName>com.agilogy.uri.Segment.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>AbsolutePath</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.AbsolutePath</fullClassName>
        <method>toString</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>217</id>
        <start>3529</start>
        <end>3540</end>
        <line>99</line>
        <description>AbsolutePath.this.stringValue</description>
        <symbolName>com.agilogy.uri.AbsolutePath.stringValue</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>414</id>
        <start>8932</start>
        <end>8951</end>
        <line>229</line>
        <description>chars.apply(i.+(1)).==('/')</description>
        <symbolName>scala.Char.==</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>isAlpha</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>100</id>
        <start>1428</start>
        <end>1448</end>
        <line>42</line>
        <description>c.&gt;=('A').&amp;&amp;(c.&lt;=('Z'))</description>
        <symbolName>scala.Boolean.&amp;&amp;</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>450</id>
        <start>9433</start>
        <end>9437</end>
        <line>253</line>
        <description>scala.None</description>
        <symbolName>scala.None</symbolName>
        <treeName>Block</treeName>
        <branch>true</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>423</id>
        <start>9097</start>
        <end>9100</end>
        <line>236</line>
        <description>'?'</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Literal</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>isValidScheme</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>109</id>
        <start>1732</start>
        <end>1736</end>
        <line>51</line>
        <description>null</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Literal</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>pctEncode</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>82</id>
        <start>797</start>
        <end>837</end>
        <line>22</line>
        <description>java.lang.Integer.toHexString(c.toInt).toUpperCase()</description>
        <symbolName>java.lang.String.toUpperCase</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</source>
        <package>validation</package>
        <class>NoAuthorityPathUriVOps</class>
        <classType>Class</classType>
        <fullClassName>validation.Validation.NoAuthorityPathUriVOps</fullClassName>
        <method>q</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</path>
        <id>495</id>
        <start>1303</start>
        <end>1312</end>
        <line>24</line>
        <description>x$5.q(query)</description>
        <symbolName>com.agilogy.uri.NoQueryFragmentUri.q</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>pctEncode</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>91</id>
        <start>946</start>
        <end>977</end>
        <line>26</line>
        <description>JavaNetCodec.encode(c.toString())</description>
        <symbolName>com.agilogy.uri.JavaNetCodec.encode</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</source>
        <package>validation</package>
        <class>NoAuthorityPathUriVOps</class>
        <classType>Class</classType>
        <fullClassName>validation.Validation.NoAuthorityPathUriVOps</fullClassName>
        <method>f</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</path>
        <id>504</id>
        <start>1794</start>
        <end>1816</end>
        <line>29</line>
        <description>NoAuthorityPathUriVOps.this.self.map[com.agilogy.uri.NoAuthorityPathFUri](((x$9:
            com.agilogy.uri.NoAuthorityPathUri) =&gt; x$9.f(fragment)))
        </description>
        <symbolName>scala.util.Either.map</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>Path</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Path</fullClassName>
        <method>&lt;none&gt;</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>190</id>
        <start>1708</start>
        <end>1720</end>
        <line>46</line>
        <description>&quot;(/[^?#]*)+&quot;</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Literal</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>read</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>396</id>
        <start>8593</start>
        <end>8593</end>
        <line>213</line>
        <description>while$2()</description>
        <symbolName>com.agilogy.uri.Uri.while$2</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>55</id>
        <start>2262</start>
        <end>2300</end>
        <line>53</line>
        <description>scala.`package`.Right.apply[Nothing, com.agilogy.uri.Authority](Authority.apply(userInfo, host,
            port))
        </description>
        <symbolName>scala.util.Right.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>405</id>
        <start>8780</start>
        <end>8795</end>
        <line>222</line>
        <description>chars.apply(i).==(':')</description>
        <symbolName>scala.Char.==</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>&lt;none&gt;</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>64</id>
        <start>287</start>
        <end>293</end>
        <line>11</line>
        <description>&quot;-._~&quot;</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Literal</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>readUntil</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>378</id>
        <start>8327</start>
        <end>8357</end>
        <line>201</line>
        <description>delimiters.contains(chars.apply(i)).unary_!</description>
        <symbolName>scala.Boolean.unary_!</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>&lt;none&gt;</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>73</id>
        <start>513</start>
        <end>522</end>
        <line>15</line>
        <description>Encoder.this.subDelims</description>
        <symbolName>com.agilogy.uri.Encoder.subDelims</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</source>
        <package>validation</package>
        <class>Validation</class>
        <classType>Trait</classType>
        <fullClassName>validation.Validation</fullClassName>
        <method>sequence</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</path>
        <id>486</id>
        <start>294</start>
        <end>344</end>
        <line>10</line>
        <description>optE.map[scala.util.Either[E,Some[R]]](((x$1: Either[E,R]) =&gt; x$1.map[Some[R]]({
            ((value: R) =&gt; scala.Some.apply[R](value))
            }))).getOrElse[scala.util.Either[E,Option[R]]](scala.`package`.Right.apply[Nothing, None.type](scala.None))
        </description>
        <symbolName>scala.Option.getOrElse</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quote</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>145</id>
        <start>3442</start>
        <end>3455</end>
        <line>95</line>
        <description>sb.toString()</description>
        <symbolName>scala.collection.mutable.StringBuilder.toString</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quoteAuthority</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>154</id>
        <start>4622</start>
        <end>4635</end>
        <line>137</line>
        <description>x$1.stringValue</description>
        <symbolName>com.agilogy.uri.Port.stringValue</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>of</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>360</id>
        <start>7351</start>
        <end>7397</end>
        <line>175</line>
        <description>scala.`package`.Left.apply[com.agilogy.uri.RootlessPathInAuthorityUri,
            Nothing](RootlessPathInAuthorityUri.apply(scheme, a, p))
        </description>
        <symbolName>scala.util.Left.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>426</id>
        <start>9092</start>
        <end>9125</end>
        <line>236</line>
        <description>scala.Predef.Set.apply[Char]('?', '#').contains(chars.apply(i)).unary_!</description>
        <symbolName>scala.Boolean.unary_!</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>read</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>399</id>
        <start>8574</start>
        <end>8574</end>
        <line>213</line>
        <description>()</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Block</treeName>
        <branch>true</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>pctEncode</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>85</id>
        <start>853</start>
        <end>866</end>
        <line>23</line>
        <description>c.&lt;=('\u0080')</description>
        <symbolName>scala.Char.&lt;=</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>parseTry</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>58</id>
        <start>2441</start>
        <end>2449</end>
        <line>61</line>
        <description>Authority.this.parse(s)</description>
        <symbolName>com.agilogy.uri.Authority.parse</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>408</id>
        <start>8805</start>
        <end>8811</end>
        <line>223</line>
        <description>i = i.+(1)</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Assign</treeName>
        <branch>true</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>&lt;none&gt;</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>67</id>
        <start>328</start>
        <end>339</end>
        <line>12</line>
        <description>scala.Predef.augmentString(&quot;+-.&quot;).toSet[Char]</description>
        <symbolName>scala.collection.TraversableOnce.toSet</symbolName>
        <treeName>TypeApply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>pctEncode</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>94</id>
        <start>942</start>
        <end>1169</end>
        <line>26</line>
        <description>scala.util.Try.apply[String](JavaNetCodec.encode(c.toString())) match {
            case (value: String)scala.util.Success[String]((s @ _)) =&gt; s
            case (exception: Throwable)scala.util.Failure[String]((t @ _)) =&gt; &quot;?&quot;
            }
        </description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Match</treeName>
        <branch>true</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quote</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>139</id>
        <start>3400</start>
        <end>3423</end>
        <line>92</line>
        <description>sb.append(Encoder.this.pctEncode(c))</description>
        <symbolName>scala.collection.mutable.StringBuilder.append</symbolName>
        <treeName>Block</treeName>
        <branch>true</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>NoAuthorityPathUri</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.NoAuthorityPathUri</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>300</id>
        <start>2526</start>
        <end>2529</end>
        <line>93</line>
        <description>new $anon()</description>
        <symbolName>com.agilogy.uri.NoAuthorityPathUri.$anon.&lt;init&gt;</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>readUntil</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>381</id>
        <start>8371</start>
        <end>8391</end>
        <line>202</line>
        <description>res.append(chars.apply(i))</description>
        <symbolName>scala.collection.mutable.StringBuilder.append</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>40</id>
        <start>1753</start>
        <end>1763</end>
        <line>42</line>
        <description>Host.apply(host)</description>
        <symbolName>com.agilogy.uri.Host.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>noAuthority</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>354</id>
        <start>6902</start>
        <end>6945</end>
        <line>167</line>
        <description>scala.`package`.Right.apply[Nothing,
            com.agilogy.uri.NoAuthorityPathQUri](NoAuthorityPathQUri.apply(scheme, path, q))
        </description>
        <symbolName>scala.util.Right.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>read</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>390</id>
        <start>8507</start>
        <end>8509</end>
        <line>210</line>
        <description>&quot;&quot;</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Literal</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>49</id>
        <start>2084</start>
        <end>2127</end>
        <line>50</line>
        <description>Encoder.decode(scala.Option.apply[String](sHost).getOrElse[String](&quot;&quot;))</description>
        <symbolName>com.agilogy.uri.Encoder.decode</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>471</id>
        <start>10349</start>
        <end>10369</end>
        <line>274</line>
        <description>scheme.left.toOption</description>
        <symbolName>scala.util.Either.LeftProjection.toOption</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quote</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>130</id>
        <start>3005</start>
        <end>3047</end>
        <line>83</line>
        <description>sb.append(JavaNetCodec.encode(&quot;&quot;.+(c).+(l)))</description>
        <symbolName>scala.collection.mutable.StringBuilder.append</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>336</id>
        <start>5479</start>
        <end>5500</end>
        <line>144</line>
        <description>Authority.apply(Host.apply(host))</description>
        <symbolName>com.agilogy.uri.Authority.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Port</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Port</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>4</id>
        <start>533</start>
        <end>538</end>
        <line>20</line>
        <description>v.&lt;(0)</description>
        <symbolName>scala.Int.&lt;</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>345</id>
        <start>6021</start>
        <end>6059</end>
        <line>150</line>
        <description>AuthorityPathUri.apply(scheme, authority, p)</description>
        <symbolName>com.agilogy.uri.AuthorityPathUri.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>13</id>
        <start>840</start>
        <end>844</end>
        <line>33</line>
        <description>scala.None</description>
        <symbolName>scala.None</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>372</id>
        <start>8160</start>
        <end>8161</end>
        <line>195</line>
        <description>0</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Literal</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>453</id>
        <start>9633</start>
        <end>9684</end>
        <line>263</line>
        <description>scala.StringContext.apply(&quot;s = \'&quot;, &quot;\', a = \'&quot;, &quot;\', p = \'&quot;,
            &quot;\', q = \'&quot;, &quot;\', f = \'&quot;, &quot;\'&quot;).s(s, a, p, q, f)
        </description>
        <symbolName>scala.StringContext.s</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quoteAuthority</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>148</id>
        <start>4449</start>
        <end>4519</end>
        <line>135</line>
        <description>Encoder.quote(ui.stringValue, Encoder.userInfoChars.--(scala.Predef.Set.apply[Char](':'))).+(&quot;@&quot;)</description>
        <symbolName>java.lang.String.+</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>462</id>
        <start>9994</start>
        <end>10021</end>
        <line>268</line>
        <description>Path.parse(p.getOrElse[String](&quot;&quot;))</description>
        <symbolName>com.agilogy.uri.Path.parse</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quote</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>121</id>
        <start>2396</start>
        <end>2405</end>
        <line>71</line>
        <description>i.hasNext</description>
        <symbolName>scala.collection.Iterator.hasNext</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quoteAuthority</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>157</id>
        <start>4423</start>
        <end>4636</end>
        <line>136</line>
        <description>a.userInfo.fold[String](&quot;&quot;)(((ui: com.agilogy.uri.UserInfo) =&gt;
            Encoder.quote(ui.stringValue, Encoder.userInfoChars.--(scala.Predef.Set.apply[Char](':'))).+(&quot;@&quot;))).+(Encoder.quote(a.host.stringValue,
            Encoder.registeredNameChars)).+(a.port.fold[String](&quot;&quot;)(((x$1: com.agilogy.uri.Port) =&gt; &quot;:&quot;.+(x$1.stringValue))))
        </description>
        <symbolName>java.lang.String.+</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>22</id>
        <start>1059</start>
        <end>1100</end>
        <line>36</line>
        <description>Authority.apply(UserInfo.apply(userInfo), Host.apply(host))</description>
        <symbolName>com.agilogy.uri.Authority.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>of</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>363</id>
        <start>7522</start>
        <end>7568</end>
        <line>177</line>
        <description>Uri.noAuthority(scheme, path, query, fragment)</description>
        <symbolName>com.agilogy.uri.Uri.noAuthority</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>435</id>
        <start>9217</start>
        <end>9246</end>
        <line>242</line>
        <description>i.&lt;(length).&amp;&amp;(chars.apply(i).==('?'))</description>
        <symbolName>scala.Boolean.&amp;&amp;</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>31</id>
        <start>1455</start>
        <end>1469</end>
        <line>40</line>
        <description>scala.Some.apply[com.agilogy.uri.UserInfo](userInfo)</description>
        <symbolName>scala.Some.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>444</id>
        <start>9349</start>
        <end>9378</end>
        <line>249</line>
        <description>i.&lt;(length).&amp;&amp;(chars.apply(i).==('#'))</description>
        <symbolName>scala.Boolean.&amp;&amp;</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>417</id>
        <start>8996</start>
        <end>9014</end>
        <line>231</line>
        <description>scala.Predef.Set.apply[Char]('/', '?', '#')</description>
        <symbolName>scala.collection.generic.GenericCompanion.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>isDigit</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>103</id>
        <start>1504</start>
        <end>1512</end>
        <line>44</line>
        <description>c.&lt;=('9')</description>
        <symbolName>scala.Char.&lt;=</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>&lt;none&gt;</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>76</id>
        <start>499</start>
        <end>536</end>
        <line>15</line>
        <description>Encoder.this.unreserved.++(Encoder.this.subDelims).++(scala.Predef.augmentString(&quot;:@&quot;).toSet[Char])</description>
        <symbolName>scala.collection.SetLike.++</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>isValidScheme</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>112</id>
        <start>1756</start>
        <end>1776</end>
        <line>51</line>
        <description>Encoder.this.isAlpha(v.charAt(0))</description>
        <symbolName>com.agilogy.uri.Encoder.isAlpha</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>NoAuthorityPathQUri</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.NoAuthorityPathQUri</fullClassName>
        <method>##</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>309</id>
        <start>3471</start>
        <end>3475</end>
        <line>110</line>
        <description>NoAuthorityPathQUri.this.path</description>
        <symbolName>com.agilogy.uri.NoAuthorityPathQUri.path</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>AuthorityPathUri</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.AuthorityPathUri</fullClassName>
        <method>?</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>318</id>
        <start>4228</start>
        <end>4234</end>
        <line>124</line>
        <description>AuthorityPathUri.this.scheme</description>
        <symbolName>com.agilogy.uri.AuthorityPathUri.scheme</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>AuthorityPathQUri</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.AuthorityPathQUri</fullClassName>
        <method>##</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>327</id>
        <start>4673</start>
        <end>4685</end>
        <line>131</line>
        <description>AuthorityPathQUri.this.theAuthority</description>
        <symbolName>com.agilogy.uri.AuthorityPathQUri.theAuthority</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>16</id>
        <start>885</start>
        <end>906</end>
        <line>34</line>
        <description>Authority.apply(Host.apply(host))</description>
        <symbolName>com.agilogy.uri.Authority.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>noAuthority</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>357</id>
        <start>7068</start>
        <end>7108</end>
        <line>169</line>
        <description>NoAuthorityPathQFUri.apply(scheme, path, q, f)</description>
        <symbolName>com.agilogy.uri.NoAuthorityPathQFUri.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>isAlpha</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>97</id>
        <start>1414</start>
        <end>1422</end>
        <line>42</line>
        <description>c.&lt;=('z')</description>
        <symbolName>scala.Char.&lt;=</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>AuthorityPathUri</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.AuthorityPathUri</fullClassName>
        <method>/</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>312</id>
        <start>4094</start>
        <end>4102</end>
        <line>121</line>
        <description>AuthorityPathUri.this.path./(s)</description>
        <symbolName>com.agilogy.uri.Path./</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Port</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Port</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>7</id>
        <start>540</start>
        <end>561</end>
        <line>20</line>
        <description>scala.`package`.Left.apply[com.agilogy.uri.NegativePort, Nothing](NegativePort.apply(v))
        </description>
        <symbolName>scala.util.Left.apply</symbolName>
        <treeName>Block</treeName>
        <branch>true</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>348</id>
        <start>6293</start>
        <end>6339</end>
        <line>153</line>
        <description>AuthorityPathQFUri.apply(scheme, authority, p, q, f)</description>
        <symbolName>com.agilogy.uri.AuthorityPathQFUri.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>read</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>393</id>
        <start>8581</start>
        <end>8591</end>
        <line>213</line>
        <description>i.&lt;(length)</description>
        <symbolName>scala.Int.&lt;</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>&lt;none&gt;</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>79</id>
        <start>564</start>
        <end>594</end>
        <line>16</line>
        <description>Encoder.this.pathSegmentChars.++(scala.Predef.augmentString(&quot;/?&quot;).toSet[Char])
        </description>
        <symbolName>scala.collection.SetLike.++</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>402</id>
        <start>8732</start>
        <end>8755</end>
        <line>221</line>
        <description>scala.Predef.Set.apply[Char](':', '/', '?', '#')</description>
        <symbolName>scala.collection.generic.GenericCompanion.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>pctEncode</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>88</id>
        <start>876</start>
        <end>922</end>
        <line>24</line>
        <description>&quot;%&quot;.+(java.lang.Integer.toHexString(c.toInt).toUpperCase())</description>
        <symbolName>java.lang.String.+</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>NoAuthorityPathUri</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.NoAuthorityPathUri</fullClassName>
        <method>?</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>294</id>
        <start>2228</start>
        <end>2232</end>
        <line>86</line>
        <description>NoAuthorityPathUri.this.path</description>
        <symbolName>com.agilogy.uri.NoAuthorityPathUri.path</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>NoAuthorityPathUri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.NoAuthorityPathUri</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>303</id>
        <start>2910</start>
        <end>2971</end>
        <line>99</line>
        <description>scala.`package`.Left.apply[com.agilogy.uri.PathStartsWithDoubleSlashInNoAuhtorityUri,
            Nothing](PathStartsWithDoubleSlashInNoAuhtorityUri.apply(scheme, path))
        </description>
        <symbolName>scala.util.Left.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>readUntil</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>375</id>
        <start>8239</start>
        <end>8241</end>
        <line>198</line>
        <description>&quot;&quot;</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Block</treeName>
        <branch>true</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>411</id>
        <start>8823</start>
        <end>8862</end>
        <line>224</line>
        <description>{
            scheme = scala.None;
            i = 0
            }
        </description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Block</treeName>
        <branch>true</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>&lt;none&gt;</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>70</id>
        <start>370</start>
        <end>405</end>
        <line>13</line>
        <description>Encoder.this.unreserved.++(Encoder.this.subDelims).++(scala.Predef.Set.apply[Char](':'))
        </description>
        <symbolName>scala.collection.SetLike.++</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>readUntil</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>384</id>
        <start>8359</start>
        <end>8418</end>
        <line>201</line>
        <description>{
            {
            res.append(chars.apply(i));
            i = i.+(1)
            };
            while$1()
            }
        </description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Block</treeName>
        <branch>true</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>&lt;none&gt;</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>43</id>
        <start>1798</start>
        <end>1837</end>
        <line>44</line>
        <description>&quot;(([^/?#@]*)@)?([^/?#@:]*)(:([0-9]*))?&quot;</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Literal</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>52</id>
        <start>2229</start>
        <end>2252</end>
        <line>52</line>
        <description>Port.apply(scala.Predef.augmentString(p).toInt).right.get</description>
        <symbolName>scala.util.Either.RightProjection.get</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Scheme.scala</source>
        <package>com.agilogy.uri</package>
        <class>Scheme</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Scheme</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Scheme.scala</path>
        <id>249</id>
        <start>244</start>
        <end>269</end>
        <line>10</line>
        <description>Encoder.isValidScheme(v).unary_!</description>
        <symbolName>scala.Boolean.unary_!</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>NoFragmentUri</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.NoFragmentUri</fullClassName>
        <method>##</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>276</id>
        <start>1164</start>
        <end>1175</end>
        <line>57</line>
        <description>Fragment.apply(f)</description>
        <symbolName>com.agilogy.uri.Fragment.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Segment.scala</source>
        <package>com.agilogy.uri</package>
        <class>Segment</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Segment</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Segment.scala</path>
        <id>258</id>
        <start>621</start>
        <end>640</end>
        <line>22</line>
        <description>stringValue.isEmpty()</description>
        <symbolName>java.lang.String.isEmpty</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>NoQueryFragmentUri</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.NoQueryFragmentUri</fullClassName>
        <method>q</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>285</id>
        <start>1536</start>
        <end>1555</end>
        <line>68</line>
        <description>this.?(Query.apply(query))</description>
        <symbolName>com.agilogy.uri.NoQueryFragmentUri.?</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>equals</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>267</id>
        <start>529</start>
        <end>562</end>
        <line>27</line>
        <description>this.stringValue.==(u.stringValue)</description>
        <symbolName>java.lang.Object.==</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>AuthorityPathQUri</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.AuthorityPathQUri</fullClassName>
        <method>##</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>330</id>
        <start>4646</start>
        <end>4705</end>
        <line>131</line>
        <description>AuthorityPathQFUri.apply(AuthorityPathQUri.this.scheme, AuthorityPathQUri.this.theAuthority,
            AuthorityPathQUri.this.path, AuthorityPathQUri.this.theQuery, f)
        </description>
        <symbolName>com.agilogy.uri.AuthorityPathQFUri.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>25</id>
        <start>1150</start>
        <end>1183</end>
        <line>37</line>
        <description>Authority.apply(scala.None, host, scala.Some.apply[com.agilogy.uri.Port](port))</description>
        <symbolName>com.agilogy.uri.Authority.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>339</id>
        <start>5588</start>
        <end>5615</end>
        <line>145</line>
        <description>Authority.apply(Host.apply(host), port)</description>
        <symbolName>com.agilogy.uri.Authority.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>parseTry</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>366</id>
        <start>7856</start>
        <end>7864</end>
        <line>186</line>
        <description>Uri.this.parse(s)</description>
        <symbolName>com.agilogy.uri.Uri.parse</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>34</id>
        <start>1573</start>
        <end>1591</end>
        <line>41</line>
        <description>UserInfo.apply(userInfo)</description>
        <symbolName>com.agilogy.uri.UserInfo.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>RootlessSingleSegmentPath</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.RootlessSingleSegmentPath</fullClassName>
        <method>segments</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>240</id>
        <start>5363</start>
        <end>5370</end>
        <line>155</line>
        <description>RootlessSingleSegmentPath.this.segment</description>
        <symbolName>com.agilogy.uri.RootlessSingleSegmentPath.segment</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>AuthorityPathUri</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.AuthorityPathUri</fullClassName>
        <method>?</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>321</id>
        <start>4210</start>
        <end>4258</end>
        <line>124</line>
        <description>AuthorityPathQUri.apply(AuthorityPathUri.this.scheme, AuthorityPathUri.this.theAuthority,
            AuthorityPathUri.this.path, q)
        </description>
        <symbolName>com.agilogy.uri.AuthorityPathQUri.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>parseTry</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>61</id>
        <start>2536</start>
        <end>2546</end>
        <line>63</line>
        <description>scala.util.Success.apply[com.agilogy.uri.Authority](r)</description>
        <symbolName>scala.util.Success.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Port</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.Port</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>10</id>
        <start>571</start>
        <end>592</end>
        <line>21</line>
        <description>scala.`package`.Right.apply[Nothing, com.agilogy.uri.Port]({
            final class $anon extends Port {
            def &lt;init&gt;(): &lt;$anon: com.agilogy.uri.Port&gt; = {
            $anon.super.&lt;init&gt;(v);
            ()
            };
            &lt;empty&gt;
            };
            new $anon()
            })
        </description>
        <symbolName>scala.util.Right.apply</symbolName>
        <treeName>Block</treeName>
        <branch>true</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>Path</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Path</fullClassName>
        <method>rootless</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>189</id>
        <start>1636</start>
        <end>1675</end>
        <line>44</line>
        <description>RootlessPath.apply(segment, (moreSegments: _*))</description>
        <symbolName>com.agilogy.uri.RootlessPath.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>RootlessPath</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.RootlessPath</fullClassName>
        <method>pathType</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>225</id>
        <start>4187</start>
        <end>4204</end>
        <line>120</line>
        <description>PathType.Rootless</description>
        <symbolName>com.agilogy.uri.PathType.Rootless</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>NoAuthorityPathUri</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.NoAuthorityPathUri</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>306</id>
        <start>3134</start>
        <end>3180</end>
        <line>102</line>
        <description>scala.`package`.Right.apply[Nothing, com.agilogy.uri.NoAuthorityPathUri]({
            final class $anon extends NoAuthorityPathUri {
            def &lt;init&gt;(): &lt;$anon: com.agilogy.uri.NoAuthorityPathUri&gt; = {
            $anon.super.&lt;init&gt;(scheme, path);
            ()
            };
            &lt;empty&gt;
            };
            new $anon()
            })
        </description>
        <symbolName>scala.util.Right.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</source>
        <package>validation</package>
        <class>NoAuthorityPathQUriVOps</class>
        <classType>Class</classType>
        <fullClassName>validation.Validation.NoAuthorityPathQUriVOps</fullClassName>
        <method>f</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</path>
        <id>512</id>
        <start>2431</start>
        <end>2453</end>
        <line>36</line>
        <description>NoAuthorityPathQUriVOps.this.self.map[com.agilogy.uri.NoAuthorityPathQFUri](((x$13:
            com.agilogy.uri.NoAuthorityPathQUri) =&gt; x$13.f(fragment)))
        </description>
        <symbolName>scala.util.Either.map</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>37</id>
        <start>1606</start>
        <end>1616</end>
        <line>41</line>
        <description>scala.Some.apply[com.agilogy.uri.Port](port)</description>
        <symbolName>scala.Some.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>Path</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Path</fullClassName>
        <method>/</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>180</id>
        <start>1046</start>
        <end>1056</end>
        <line>30</line>
        <description>Segment.apply(s)</description>
        <symbolName>com.agilogy.uri.Segment.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>333</id>
        <start>5393</start>
        <end>5403</end>
        <line>143</line>
        <description>Path.empty</description>
        <symbolName>com.agilogy.uri.Path.empty</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>UserInfo</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.UserInfo</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>1</id>
        <start>273</start>
        <end>276</end>
        <line>10</line>
        <description>new $anon()</description>
        <symbolName>com.agilogy.uri.UserInfo.$anon.&lt;init&gt;</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>342</id>
        <start>5744</start>
        <end>5768</end>
        <line>146</line>
        <description>Authority.apply(Host.apply(host), p)</description>
        <symbolName>com.agilogy.uri.Authority.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>Path</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Path</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>207</id>
        <start>2429</start>
        <end>2446</end>
        <line>63</line>
        <description>Encoder.decode(s)</description>
        <symbolName>com.agilogy.uri.Encoder.decode</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>AbsolutePath</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.AbsolutePath</fullClassName>
        <method>toString</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>216</id>
        <start>3540</start>
        <end>3544</end>
        <line>99</line>
        <description>&quot;)&quot;</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Literal</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>NoAuthorityPathUri</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.NoAuthorityPathUri</fullClassName>
        <method>/</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>288</id>
        <start>2021</start>
        <end>2027</end>
        <line>83</line>
        <description>NoAuthorityPathUri.this.scheme</description>
        <symbolName>com.agilogy.uri.NoAuthorityPathUri.scheme</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>AuthorityPathUri</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.AuthorityPathUri</fullClassName>
        <method>##</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>324</id>
        <start>4352</start>
        <end>4356</end>
        <line>126</line>
        <description>AuthorityPathUri.this.path</description>
        <symbolName>com.agilogy.uri.AuthorityPathUri.path</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>NoAuthorityPathUri</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.NoAuthorityPathUri</fullClassName>
        <method>##</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>297</id>
        <start>2320</start>
        <end>2324</end>
        <line>88</line>
        <description>NoAuthorityPathUri.this.path</description>
        <symbolName>com.agilogy.uri.NoAuthorityPathUri.path</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</source>
        <package>validation</package>
        <class>NoAuthorityPathUriVOps</class>
        <classType>Class</classType>
        <fullClassName>validation.Validation.NoAuthorityPathUriVOps</fullClassName>
        <method>f</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</path>
        <id>503</id>
        <start>1803</start>
        <end>1815</end>
        <line>29</line>
        <description>x$9.f(fragment)</description>
        <symbolName>com.agilogy.uri.NoFragmentUri.f</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>Path</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Path</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>198</id>
        <start>2063</start>
        <end>2073</end>
        <line>56</line>
        <description>m.group(1)</description>
        <symbolName>scala.util.matching.Regex.MatchData.group</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>AuthorityUri</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.AuthorityUri</fullClassName>
        <method>authority</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>270</id>
        <start>789</start>
        <end>801</end>
        <line>39</line>
        <description>AuthorityUri.this.theAuthority</description>
        <symbolName>com.agilogy.uri.AuthorityUri.theAuthority</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Scheme.scala</source>
        <package>com.agilogy.uri</package>
        <class>Scheme</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Scheme</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Scheme.scala</path>
        <id>252</id>
        <start>271</start>
        <end>297</end>
        <line>10</line>
        <description>scala.`package`.Left.apply[com.agilogy.uri.IllegalSchemeName,
            Nothing](IllegalSchemeName.apply(v))
        </description>
        <symbolName>scala.util.Left.apply</symbolName>
        <treeName>Block</treeName>
        <branch>true</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>NoFragmentUri</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.NoFragmentUri</fullClassName>
        <method>f</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>279</id>
        <start>1246</start>
        <end>1257</end>
        <line>59</line>
        <description>Fragment.apply(f)</description>
        <symbolName>com.agilogy.uri.Fragment.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>noAuthority</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>351</id>
        <start>6539</start>
        <end>6568</end>
        <line>160</line>
        <description>NoAuthorityPathUri.apply(scheme, p)</description>
        <symbolName>com.agilogy.uri.NoAuthorityPathUri.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>19</id>
        <start>964</start>
        <end>1001</end>
        <line>35</line>
        <description>Authority.apply(scala.Some.apply[com.agilogy.uri.UserInfo](userInfo), host, scala.None)
        </description>
        <symbolName>com.agilogy.uri.Authority.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>28</id>
        <start>1360</start>
        <end>1370</end>
        <line>39</line>
        <description>Host.apply(host)</description>
        <symbolName>com.agilogy.uri.Host.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>ConsRootlessPath</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.ConsRootlessPath</fullClassName>
        <method>/</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>234</id>
        <start>4831</start>
        <end>4856</end>
        <line>139</line>
        <description>ConsRootlessPath.apply(this, s)</description>
        <symbolName>com.agilogy.uri.ConsRootlessPath.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Segment.scala</source>
        <package>com.agilogy.uri</package>
        <class>Segment</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Segment</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Segment.scala</path>
        <id>261</id>
        <start>653</start>
        <end>681</end>
        <line>22</line>
        <description>NonEmptySegment.apply(stringValue)</description>
        <symbolName>com.agilogy.uri.NonEmptySegment.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>EmptyPath</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.EmptyPath</fullClassName>
        <method>pathType</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>243</id>
        <start>5743</start>
        <end>5757</end>
        <line>168</line>
        <description>PathType.Empty</description>
        <symbolName>com.agilogy.uri.PathType.Empty</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>AuthorityPathUri</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.AuthorityPathUri</fullClassName>
        <method>/</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>315</id>
        <start>4077</start>
        <end>4103</end>
        <line>121</line>
        <description>this.copy(x$2, x$3, x$1)</description>
        <symbolName>com.agilogy.uri.AuthorityPathUri.copy</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>NoQueryFragmentUri</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.NoQueryFragmentUri</fullClassName>
        <method>?</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>282</id>
        <start>1446</start>
        <end>1465</end>
        <line>66</line>
        <description>this.?(Query.apply(query))</description>
        <symbolName>com.agilogy.uri.NoQueryFragmentUri.?</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>Path</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.Path</fullClassName>
        <method>isEmpty</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>174</id>
        <start>555</start>
        <end>569</end>
        <line>18</line>
        <description>PathType.Empty</description>
        <symbolName>com.agilogy.uri.PathType.Empty</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</source>
        <package>validation</package>
        <class>NoAuthorityPathUriVOps</class>
        <classType>Class</classType>
        <fullClassName>validation.Validation.NoAuthorityPathUriVOps</fullClassName>
        <method>/</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</path>
        <id>488</id>
        <start>826</start>
        <end>845</end>
        <line>19</line>
        <description>NoAuthorityPathUriVOps.this.self.flatMap[com.agilogy.uri.PathStartsWithDoubleSlashInNoAuhtorityUri,
            com.agilogy.uri.NoAuthorityPathUri](((x$2: com.agilogy.uri.NoAuthorityPathUri) =&gt; x$2./(s)))
        </description>
        <symbolName>scala.util.Either.flatMap</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quoteAuthority</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>147</id>
        <start>4439</start>
        <end>4441</end>
        <line>135</line>
        <description>&quot;&quot;</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Literal</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</source>
        <package>validation</package>
        <class>NoAuthorityPathUriVOps</class>
        <classType>Class</classType>
        <fullClassName>validation.Validation.NoAuthorityPathUriVOps</fullClassName>
        <method>q</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</path>
        <id>497</id>
        <start>1422</start>
        <end>1431</end>
        <line>25</line>
        <description>x$6.q(query)</description>
        <symbolName>com.agilogy.uri.NoQueryFragmentUri.q</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>Path</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Path</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>183</id>
        <start>1164</start>
        <end>1174</end>
        <line>32</line>
        <description>Segment.apply(s)</description>
        <symbolName>com.agilogy.uri.Segment.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quoteAuthority</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>156</id>
        <start>4600</start>
        <end>4636</end>
        <line>137</line>
        <description>a.port.fold[String](&quot;&quot;)(((x$1: com.agilogy.uri.Port) =&gt; &quot;:&quot;.+(x$1.stringValue)))</description>
        <symbolName>scala.Option.fold</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Scheme.scala</source>
        <package>com.agilogy.uri</package>
        <class>Scheme</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.Scheme</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Scheme.scala</path>
        <id>255</id>
        <start>307</start>
        <end>342</end>
        <line>11</line>
        <description>scala.`package`.Right.apply[Nothing, com.agilogy.uri.Scheme]({
            final class $anon extends Scheme {
            def &lt;init&gt;(): &lt;$anon: com.agilogy.uri.Scheme&gt; = {
            $anon.super.&lt;init&gt;(v.toLowerCase());
            ()
            };
            &lt;empty&gt;
            };
            new $anon()
            })
        </description>
        <symbolName>scala.util.Right.apply</symbolName>
        <treeName>Block</treeName>
        <branch>true</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>RootlessPath</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.RootlessPath</fullClassName>
        <method>toString</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>228</id>
        <start>4387</start>
        <end>4391</end>
        <line>125</line>
        <description>&quot;)&quot;</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Literal</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>toJava</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>264</id>
        <start>437</start>
        <end>448</end>
        <line>23</line>
        <description>Uri.this.stringValue</description>
        <symbolName>com.agilogy.uri.Uri.stringValue</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>461</id>
        <start>10005</start>
        <end>10020</end>
        <line>268</line>
        <description>p.getOrElse[String](&quot;&quot;)</description>
        <symbolName>scala.Option.getOrElse</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>470</id>
        <start>10245</start>
        <end>10297</end>
        <line>272</line>
        <description>scala.`package`.Right.apply[Nothing, com.agilogy.uri.Uri](Uri.of(s, a, path, query,
            fragment).right.get)
        </description>
        <symbolName>scala.util.Right.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>443</id>
        <start>9363</start>
        <end>9378</end>
        <line>249</line>
        <description>chars.apply(i).==('#')</description>
        <symbolName>scala.Char.==</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quote</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>129</id>
        <start>3015</start>
        <end>3046</end>
        <line>83</line>
        <description>JavaNetCodec.encode(&quot;&quot;.+(c).+(l))</description>
        <symbolName>com.agilogy.uri.JavaNetCodec.encode</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/UriError.scala</source>
        <package>com.agilogy.uri</package>
        <class>UriParseError</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.UriParseError</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/UriError.scala</path>
        <id>479</id>
        <start>332</start>
        <end>335</end>
        <line>8</line>
        <description>new $anon()</description>
        <symbolName>com.agilogy.uri.UriParseError.$anon.&lt;init&gt;</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>452</id>
        <start>9561</start>
        <end>9578</end>
        <line>261</line>
        <description>Uri.this.matchParts(value)</description>
        <symbolName>com.agilogy.uri.Uri.matchParts</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quote</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>138</id>
        <start>3400</start>
        <end>3423</end>
        <line>92</line>
        <description>sb.append(Encoder.this.pctEncode(c))</description>
        <symbolName>scala.collection.mutable.StringBuilder.append</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>Path</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Path</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>210</id>
        <start>2392</start>
        <end>2448</end>
        <line>63</line>
        <description>tailSegments.toList.map[com.agilogy.uri.Segment, List[com.agilogy.uri.Segment]](((s: String) =&gt;
            Segment.apply(Encoder.decode(s))))(immutable.this.List.canBuildFrom[com.agilogy.uri.Segment])
        </description>
        <symbolName>scala.collection.immutable.List.map</symbolName>
        <treeName>ApplyToImplicitArgs</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>AbsolutePath</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.AbsolutePath</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>219</id>
        <start>3663</start>
        <end>3694</end>
        <line>104</line>
        <description>AbsoluteSingleSegmentPath.apply(head)</description>
        <symbolName>com.agilogy.uri.AbsoluteSingleSegmentPath.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>NoAuthorityPathUri</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.NoAuthorityPathUri</fullClassName>
        <method>/</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>291</id>
        <start>2138</start>
        <end>2148</end>
        <line>84</line>
        <description>Segment.apply(s)</description>
        <symbolName>com.agilogy.uri.Segment.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quote</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>120</id>
        <start>2356</start>
        <end>2364</end>
        <line>70</line>
        <description>i.next()</description>
        <symbolName>scala.collection.Iterator.next</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</source>
        <package>validation</package>
        <class>NoAuthorityPathUriVOps</class>
        <classType>Class</classType>
        <fullClassName>validation.Validation.NoAuthorityPathUriVOps</fullClassName>
        <method>f</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</path>
        <id>506</id>
        <start>1919</start>
        <end>1941</end>
        <line>30</line>
        <description>NoAuthorityPathUriVOps.this.self.map[com.agilogy.uri.NoAuthorityPathFUri](((x$10:
            com.agilogy.uri.NoAuthorityPathUri) =&gt; x$10.f(fragment)))
        </description>
        <symbolName>scala.util.Either.map</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quoteUri</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>165</id>
        <start>5070</start>
        <end>5126</end>
        <line>149</line>
        <description>uri.fragment.map[String](((f: com.agilogy.uri.Fragment) =&gt; &quot;#&quot;.+(f.stringValue))).getOrElse[String](&quot;&quot;)</description>
        <symbolName>scala.Option.getOrElse</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</source>
        <package>validation</package>
        <class>Validation</class>
        <classType>Trait</classType>
        <fullClassName>validation.Validation</fullClassName>
        <method>notNull</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</path>
        <id>515</id>
        <start>4029</start>
        <end>4040</end>
        <line>67</line>
        <description>scala.`package`.Right.apply[Nothing, T](value)</description>
        <symbolName>scala.util.Right.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>ConsRootlessPath</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.ConsRootlessPath</fullClassName>
        <method>segments</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>237</id>
        <start>4898</start>
        <end>4924</end>
        <line>141</line>
        <description>ConsRootlessPath.this.parent.segments.:+[com.agilogy.uri.Segment,
            Seq[com.agilogy.uri.Segment]](ConsRootlessPath.this.segment)(collection.this.Seq.canBuildFrom[com.agilogy.uri.Segment])
        </description>
        <symbolName>scala.collection.SeqLike.:+</symbolName>
        <treeName>ApplyToImplicitArgs</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>EmptyPath</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.EmptyPath</fullClassName>
        <method>/</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>246</id>
        <start>5986</start>
        <end>6014</end>
        <line>175</line>
        <description>AbsoluteSingleSegmentPath.apply(s)</description>
        <symbolName>com.agilogy.uri.AbsoluteSingleSegmentPath.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>Path</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Path</fullClassName>
        <method>&lt;none&gt;</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>192</id>
        <start>1754</start>
        <end>1775</end>
        <line>47</line>
        <description>&quot;([^?#/]+)(/[^?#]*)*&quot;</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Literal</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>Path</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Path</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>201</id>
        <start>1946</start>
        <end>2084</end>
        <line>55</line>
        <description>
            Path.this.SegmentRe.findAllIn(s).matchData.foldLeft[com.agilogy.uri.PathAbEmpty](Path.empty)(((x0$1:
            com.agilogy.uri.PathAbEmpty, x1$1: scala.util.matching.Regex.Match) =&gt;
            scala.Tuple2.apply[com.agilogy.uri.PathAbEmpty, scala.util.matching.Regex.Match](x0$1, x1$1) match {
            case (_1: com.agilogy.uri.PathAbEmpty, _2: scala.util.matching.Regex.Match)(com.agilogy.uri.PathAbEmpty,
            scala.util.matching.Regex.Match)((acc @ _), (m @ _)) =&gt; acc./(Encoder.decode(m.group(1)))
            }))
        </description>
        <symbolName>scala.collection.TraversableOnce.foldLeft</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>QueryUri</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.QueryUri</fullClassName>
        <method>query</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>273</id>
        <start>971</start>
        <end>979</end>
        <line>48</line>
        <description>QueryUri.this.theQuery</description>
        <symbolName>com.agilogy.uri.QueryUri.theQuery</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>parseTry</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>60</id>
        <start>2479</start>
        <end>2514</end>
        <line>62</line>
        <description>scala.util.Failure.apply[Nothing](AuthorityParseException.apply(e))</description>
        <symbolName>scala.util.Failure.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>Path</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Path</fullClassName>
        <method>absoluteOrEmpty</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>186</id>
        <start>1380</start>
        <end>1385</end>
        <line>39</line>
        <description>Path.this.empty</description>
        <symbolName>com.agilogy.uri.Path.empty</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>AbsolutePath</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.AbsolutePath</fullClassName>
        <method>/</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>213</id>
        <start>3347</start>
        <end>3376</end>
        <line>96</line>
        <description>NonEmptyAbsolutePath.apply(this, s)</description>
        <symbolName>com.agilogy.uri.NonEmptyAbsolutePath.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>NonEmptyAbsolutePath</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.NonEmptyAbsolutePath</fullClassName>
        <method>segments</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>222</id>
        <start>3892</start>
        <end>3899</end>
        <line>109</line>
        <description>NonEmptyAbsolutePath.this.segment</description>
        <symbolName>com.agilogy.uri.NonEmptyAbsolutePath.segment</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>pctEncode</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>87</id>
        <start>882</start>
        <end>922</end>
        <line>24</line>
        <description>java.lang.Integer.toHexString(c.toInt).toUpperCase()</description>
        <symbolName>java.lang.String.toUpperCase</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>437</id>
        <start>9284</start>
        <end>9292</end>
        <line>244</line>
        <description>scala.Predef.Set.apply[Char]('#')</description>
        <symbolName>scala.collection.generic.GenericCompanion.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>isAlpha</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>96</id>
        <start>1407</start>
        <end>1410</end>
        <line>42</line>
        <description>'a'</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Literal</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</source>
        <package>validation</package>
        <class>NoAuthorityPathQUriVOps</class>
        <classType>Class</classType>
        <fullClassName>validation.Validation.NoAuthorityPathQUriVOps</fullClassName>
        <method>##</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</path>
        <id>509</id>
        <start>2311</start>
        <end>2324</end>
        <line>35</line>
        <description>x$12.##(fragment)</description>
        <symbolName>com.agilogy.uri.NoFragmentUri.##</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</source>
        <package>validation</package>
        <class>Validation</class>
        <classType>Trait</classType>
        <fullClassName>validation.Validation</fullClassName>
        <method>sequence</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</path>
        <id>482</id>
        <start>309</start>
        <end>319</end>
        <line>10</line>
        <description>scala.Some.apply[R](value)</description>
        <symbolName>scala.Some.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Fragment.scala</source>
        <package>com.agilogy.uri</package>
        <class>Fragment</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.Fragment</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Fragment.scala</path>
        <id>168</id>
        <start>155</start>
        <end>158</end>
        <line>6</line>
        <description>new $anon()</description>
        <symbolName>com.agilogy.uri.Fragment.$anon.&lt;init&gt;</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>Path</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.Path</fullClassName>
        <method>/</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>177</id>
        <start>787</start>
        <end>804</end>
        <line>23</line>
        <description>this./(Segment.apply(s))</description>
        <symbolName>com.agilogy.uri.Path./</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>readUntil</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>383</id>
        <start>8359</start>
        <end>8359</end>
        <line>201</line>
        <description>while$1()</description>
        <symbolName>com.agilogy.uri.Uri.while$1</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>read</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>392</id>
        <start>8541</start>
        <end>8565</end>
        <line>212</line>
        <description>scala.`package`.StringBuilder.newBuilder</description>
        <symbolName>scala.collection.mutable.StringBuilder.newBuilder</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>464</id>
        <start>10057</start>
        <end>10081</end>
        <line>269</line>
        <description>Query.apply(Encoder.decode(q))</description>
        <symbolName>com.agilogy.uri.Query.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quoteAuthority</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>150</id>
        <start>4563</start>
        <end>4590</end>
        <line>136</line>
        <description>Encoder.registeredNameChars</description>
        <symbolName>com.agilogy.uri.Encoder.registeredNameChars</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</source>
        <package>validation</package>
        <class>NoAuthorityPathUriVOps</class>
        <classType>Class</classType>
        <fullClassName>validation.Validation.NoAuthorityPathUriVOps</fullClassName>
        <method>##</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</path>
        <id>500</id>
        <start>1539</start>
        <end>1562</end>
        <line>27</line>
        <description>NoAuthorityPathUriVOps.this.self.map[com.agilogy.uri.NoAuthorityPathFUri](((x$7:
            com.agilogy.uri.NoAuthorityPathUri) =&gt; x$7.##(fragment)))
        </description>
        <symbolName>scala.util.Either.map</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>473</id>
        <start>10335</start>
        <end>10395</end>
        <line>274</line>
        <description>UriParseError.apply(scheme.left.toOption, authority.left.toOption)</description>
        <symbolName>com.agilogy.uri.UriParseError.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quoteSegment</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>159</id>
        <start>4718</start>
        <end>4742</end>
        <line>141</line>
        <description>Encoder.pathSegmentChars</description>
        <symbolName>com.agilogy.uri.Encoder.pathSegmentChars</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quote</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>132</id>
        <start>2407</start>
        <end>3087</end>
        <line>71</line>
        <description>{
            val l: Char = i.next();
            if (scala.Predef.charWrapper(l).isLowSurrogate.unary_!)
            sb.append(Encoder.this.pctEncode(l))
            else
            sb.append(JavaNetCodec.encode(&quot;&quot;.+(c).+(l)))
            }
        </description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Block</treeName>
        <branch>true</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quote</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>141</id>
        <start>2340</start>
        <end>2340</end>
        <line>69</line>
        <description>while$1()</description>
        <symbolName>com.agilogy.uri.Encoder.while$1</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>446</id>
        <start>9406</start>
        <end>9412</end>
        <line>251</line>
        <description>read()</description>
        <symbolName>com.agilogy.uri.Uri.read</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>419</id>
        <start>8981</start>
        <end>9016</end>
        <line>231</line>
        <description>scala.Some.apply[String](readUntil(scala.Predef.Set.apply[Char]('/', '?', '#')))</description>
        <symbolName>scala.Some.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>isAlphaNum</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>105</id>
        <start>1573</start>
        <end>1583</end>
        <line>46</line>
        <description>Encoder.this.isDigit(c)</description>
        <symbolName>com.agilogy.uri.Encoder.isDigit</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>455</id>
        <start>9744</start>
        <end>9764</end>
        <line>264</line>
        <description>MissingScheme.apply(value)</description>
        <symbolName>com.agilogy.uri.MissingScheme.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>428</id>
        <start>9150</start>
        <end>9163</end>
        <line>237</line>
        <description>scala.Predef.Set.apply[Char]('?', '#')</description>
        <symbolName>scala.collection.generic.GenericCompanion.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>isValidScheme</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>114</id>
        <start>1780</start>
        <end>1807</end>
        <line>51</line>
        <description>scala.Predef.augmentString(v).forall({
            ((c: Char) =&gt; Encoder.this.isValidSchemeChar(c))
            })
        </description>
        <symbolName>scala.collection.IndexedSeqOptimized.forall</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quote</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>123</id>
        <start>2690</start>
        <end>2698</end>
        <line>77</line>
        <description>i.next()</description>
        <symbolName>scala.collection.Iterator.next</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>Path</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Path</fullClassName>
        <method>&lt;none&gt;</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>195</id>
        <start>1805</start>
        <end>1819</end>
        <line>49</line>
        <description>scala.Predef.augmentString(&quot;/([^?#/]*)&quot;).r</description>
        <symbolName>scala.collection.immutable.StringLike.r</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>Path</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Path</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>204</id>
        <start>2248</start>
        <end>2314</end>
        <line>61</line>
        <description>Path.this.SegmentRe.findAllIn(segmentsString).matchData.map[String](((m:
            scala.util.matching.Regex.Match) =&gt; m.group(1)))
        </description>
        <symbolName>scala.collection.Iterator.map</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>read</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>401</id>
        <start>8521</start>
        <end>8676</end>
        <line>211</line>
        <description>{
            val res: StringBuilder = scala.`package`.StringBuilder.newBuilder;
            while$2(){
            if (i.&lt;(length))
            {
            {
            res.append(i);
            i = i.+(1)
            };
            while$2()
            }
            else
            ()
            };
            res.toString()
            }
        </description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Block</treeName>
        <branch>true</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>410</id>
        <start>8855</start>
        <end>8856</end>
        <line>226</line>
        <description>0</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Literal</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>&lt;none&gt;</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>69</id>
        <start>397</start>
        <end>405</end>
        <line>13</line>
        <description>scala.Predef.Set.apply[Char](':')</description>
        <symbolName>scala.collection.generic.GenericCompanion.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>&lt;none&gt;</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>78</id>
        <start>584</start>
        <end>594</end>
        <line>16</line>
        <description>scala.Predef.augmentString(&quot;/?&quot;).toSet[Char]</description>
        <symbolName>scala.collection.TraversableOnce.toSet</symbolName>
        <treeName>TypeApply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</source>
        <package>validation</package>
        <class>NoAuthorityPathUriVOps</class>
        <classType>Class</classType>
        <fullClassName>validation.Validation.NoAuthorityPathUriVOps</fullClassName>
        <method>?</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</path>
        <id>491</id>
        <start>1066</start>
        <end>1075</end>
        <line>22</line>
        <description>x$3.?(query)</description>
        <symbolName>com.agilogy.uri.NoAuthorityPathUri.?</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>RootlessPath</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.RootlessPath</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>231</id>
        <start>4530</start>
        <end>4561</end>
        <line>131</line>
        <description>RootlessSingleSegmentPath.apply(head)</description>
        <symbolName>com.agilogy.uri.RootlessSingleSegmentPath.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>332</id>
        <start>5271</start>
        <end>5295</end>
        <line>141</line>
        <description>NoAuthorityPathUri.apply(s, p)</description>
        <symbolName>com.agilogy.uri.NoAuthorityPathUri.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>431</id>
        <start>9135</start>
        <end>9165</end>
        <line>237</line>
        <description>scala.Some.apply[String](readUntil(scala.Predef.Set.apply[Char]('?', '#')))</description>
        <symbolName>scala.Some.apply</symbolName>
        <treeName>Block</treeName>
        <branch>true</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>404</id>
        <start>8717</start>
        <end>8757</end>
        <line>221</line>
        <description>scala.Some.apply[String](readUntil(scala.Predef.Set.apply[Char](':', '/', '?', '#')))</description>
        <symbolName>scala.Some.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>pctEncode</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>90</id>
        <start>966</start>
        <end>976</end>
        <line>26</line>
        <description>c.toString()</description>
        <symbolName>scala.Any.toString</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>&lt;none&gt;</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>63</id>
        <start>188</start>
        <end>207</end>
        <line>9</line>
        <description>scala.Predef.augmentString(&quot;!$&amp;\'()*+,;=&quot;).toSet[Char]</description>
        <symbolName>scala.collection.TraversableOnce.toSet</symbolName>
        <treeName>TypeApply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>isAlpha</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>99</id>
        <start>1440</start>
        <end>1448</end>
        <line>42</line>
        <description>c.&lt;=('Z')</description>
        <symbolName>scala.Char.&lt;=</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>readUntil</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>386</id>
        <start>8306</start>
        <end>8306</end>
        <line>201</line>
        <description>()</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Block</treeName>
        <branch>true</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>45</id>
        <start>2039</start>
        <end>2057</end>
        <line>49</line>
        <description>Encoder.decode(ui)</description>
        <symbolName>com.agilogy.uri.Encoder.decode</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>read</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>395</id>
        <start>8629</start>
        <end>8635</end>
        <line>215</line>
        <description>i.+(1)</description>
        <symbolName>scala.Int.+</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>54</id>
        <start>2268</start>
        <end>2299</end>
        <line>53</line>
        <description>Authority.apply(userInfo, host, port)</description>
        <symbolName>com.agilogy.uri.Authority.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>341</id>
        <start>5754</start>
        <end>5764</end>
        <line>146</line>
        <description>Host.apply(host)</description>
        <symbolName>com.agilogy.uri.Host.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>422</id>
        <start>9040</start>
        <end>9044</end>
        <line>233</line>
        <description>scala.None</description>
        <symbolName>scala.None</symbolName>
        <treeName>Block</treeName>
        <branch>true</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>Path</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.Path</fullClassName>
        <method>isAbsolute</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>171</id>
        <start>430</start>
        <end>459</end>
        <line>16</line>
        <description>Path.this.pathType.==(PathType.Absolute)</description>
        <symbolName>java.lang.Object.==</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>readUntil</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>377</id>
        <start>8348</start>
        <end>8356</end>
        <line>201</line>
        <description>chars.apply(i)</description>
        <symbolName>scala.Array.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>413</id>
        <start>8913</start>
        <end>8928</end>
        <line>229</line>
        <description>chars.apply(i).==('/')</description>
        <symbolName>scala.Char.==</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>&lt;none&gt;</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>72</id>
        <start>442</start>
        <end>465</end>
        <line>14</line>
        <description>Encoder.this.unreserved.++(Encoder.this.subDelims)</description>
        <symbolName>scala.collection.SetLike.++</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</source>
        <package>validation</package>
        <class>Validation</class>
        <classType>Trait</classType>
        <fullClassName>validation.Validation</fullClassName>
        <method>sequence</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</path>
        <id>485</id>
        <start>332</start>
        <end>343</end>
        <line>10</line>
        <description>scala.`package`.Right.apply[Nothing, None.type](scala.None)</description>
        <symbolName>scala.util.Right.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quote</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>144</id>
        <start>2322</start>
        <end>2322</end>
        <line>69</line>
        <description>()</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Block</treeName>
        <branch>true</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>pctEncode</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>81</id>
        <start>790</start>
        <end>794</end>
        <line>22</line>
        <description>&quot;%0&quot;</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Literal</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</source>
        <package>validation</package>
        <class>NoAuthorityPathUriVOps</class>
        <classType>Class</classType>
        <fullClassName>validation.Validation.NoAuthorityPathUriVOps</fullClassName>
        <method>?</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</path>
        <id>494</id>
        <start>1176</start>
        <end>1195</end>
        <line>23</line>
        <description>NoAuthorityPathUriVOps.this.self.map[com.agilogy.uri.NoAuthorityPathQUri](((x$4:
            com.agilogy.uri.NoAuthorityPathUri) =&gt; x$4.?(query)))
        </description>
        <symbolName>scala.util.Either.map</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>467</id>
        <start>10121</start>
        <end>10148</end>
        <line>270</line>
        <description>Fragment.apply(Encoder.decode(f))</description>
        <symbolName>com.agilogy.uri.Fragment.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quoteAuthority</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>153</id>
        <start>4616</start>
        <end>4619</end>
        <line>137</line>
        <description>&quot;:&quot;</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Literal</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quote</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>126</id>
        <start>2911</start>
        <end>2934</end>
        <line>80</line>
        <description>sb.append(Encoder.this.pctEncode(l))</description>
        <symbolName>scala.collection.mutable.StringBuilder.append</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quoteUri</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>162</id>
        <start>4848</start>
        <end>4906</end>
        <line>146</line>
        <description>uri.authority.map[String](((a: com.agilogy.uri.Authority) =&gt; &quot;//&quot;.+(a.stringValue))).getOrElse[String](&quot;&quot;)</description>
        <symbolName>scala.Option.getOrElse</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>of</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>359</id>
        <start>7356</start>
        <end>7396</end>
        <line>175</line>
        <description>RootlessPathInAuthorityUri.apply(scheme, a, p)</description>
        <symbolName>com.agilogy.uri.RootlessPathInAuthorityUri.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>27</id>
        <start>1235</start>
        <end>1262</end>
        <line>38</line>
        <description>Authority.apply(Host.apply(host), port)</description>
        <symbolName>com.agilogy.uri.Authority.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>parseTry</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>368</id>
        <start>7894</start>
        <end>7923</end>
        <line>187</line>
        <description>scala.util.Failure.apply[Nothing](UriParseException.apply(e))</description>
        <symbolName>scala.util.Failure.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>440</id>
        <start>9248</start>
        <end>9300</end>
        <line>242</line>
        <description>{
            i = i.+(1);
            scala.Some.apply[String](readUntil(scala.Predef.Set.apply[Char]('#')))
            }
        </description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Block</treeName>
        <branch>true</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>36</id>
        <start>1594</start>
        <end>1604</end>
        <line>41</line>
        <description>Host.apply(host)</description>
        <symbolName>com.agilogy.uri.Host.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/UriError.scala</source>
        <package>com.agilogy.uri</package>
        <class>UriParseError</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.UriParseError</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/UriError.scala</path>
        <id>476</id>
        <start>307</start>
        <end>326</end>
        <line>7</line>
        <description>authority.isDefined</description>
        <symbolName>scala.Option.isDefined</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>449</id>
        <start>9433</start>
        <end>9437</end>
        <line>253</line>
        <description>scala.None</description>
        <symbolName>scala.None</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quote</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>135</id>
        <start>3211</start>
        <end>3223</end>
        <line>88</line>
        <description>sb.append(c)</description>
        <symbolName>scala.collection.mutable.StringBuilder.append</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>isValidSchemeChar</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>108</id>
        <start>1637</start>
        <end>1677</end>
        <line>48</line>
        <description>Encoder.this.isAlphaNum(c).||(Encoder.this.schemeChars.contains(c))</description>
        <symbolName>scala.Boolean.||</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>458</id>
        <start>9878</start>
        <end>9893</end>
        <line>265</line>
        <description>Authority.parse(s)</description>
        <symbolName>com.agilogy.uri.Authority.parse</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quote</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>117</id>
        <start>2243</start>
        <end>2260</end>
        <line>66</line>
        <description>new scala.`package`.StringBuilder()</description>
        <symbolName>scala.collection.mutable.StringBuilder.&lt;init&gt;</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>noAuthority</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>350</id>
        <start>6482</start>
        <end>6508</end>
        <line>159</line>
        <description>NoAuthorityPathUri.apply(scheme)</description>
        <symbolName>com.agilogy.uri.NoAuthorityPathUri.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Port</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.Port</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>9</id>
        <start>571</start>
        <end>592</end>
        <line>21</line>
        <description>scala.`package`.Right.apply[Nothing, com.agilogy.uri.Port]({
            final class $anon extends Port {
            def &lt;init&gt;(): &lt;$anon: com.agilogy.uri.Port&gt; = {
            $anon.super.&lt;init&gt;(v);
            ()
            };
            &lt;empty&gt;
            };
            new $anon()
            })
        </description>
        <symbolName>scala.util.Right.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>AuthorityPathUri</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.AuthorityPathUri</fullClassName>
        <method>##</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>323</id>
        <start>4338</start>
        <end>4350</end>
        <line>126</line>
        <description>AuthorityPathUri.this.theAuthority</description>
        <symbolName>com.agilogy.uri.AuthorityPathUri.theAuthority</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>18</id>
        <start>996</start>
        <end>1000</end>
        <line>35</line>
        <description>scala.None</description>
        <symbolName>scala.None</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>read</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>389</id>
        <start>8494</start>
        <end>8505</end>
        <line>210</line>
        <description>i.&gt;=(length)</description>
        <symbolName>scala.Int.&gt;=</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>48</id>
        <start>2099</start>
        <end>2126</end>
        <line>50</line>
        <description>scala.Option.apply[String](sHost).getOrElse[String](&quot;&quot;)</description>
        <symbolName>scala.Option.getOrElse</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>of</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>362</id>
        <start>7439</start>
        <end>7480</end>
        <line>176</line>
        <description>scala.`package`.Right.apply[Nothing, com.agilogy.uri.AuthorityUri](Uri.apply(scheme, a, p, query,
            fragment))
        </description>
        <symbolName>scala.util.Right.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>21</id>
        <start>1089</start>
        <end>1099</end>
        <line>36</line>
        <description>Host.apply(host)</description>
        <symbolName>com.agilogy.uri.Host.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>57</id>
        <start>2356</start>
        <end>2384</end>
        <line>56</line>
        <description>scala.`package`.Left.apply[com.agilogy.uri.AuthorityParseError,
            Nothing](AuthorityParseError.apply(s))
        </description>
        <symbolName>scala.util.Left.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>stringValue</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>263</id>
        <start>361</start>
        <end>383</end>
        <line>20</line>
        <description>Encoder.quoteUri(this)</description>
        <symbolName>com.agilogy.uri.Encoder.quoteUri</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>NoQueryUri</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.NoQueryUri</fullClassName>
        <method>query</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>272</id>
        <start>871</start>
        <end>875</end>
        <line>43</line>
        <description>scala.None</description>
        <symbolName>scala.None</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>344</id>
        <start>5712</start>
        <end>5770</end>
        <line>146</line>
        <description>Port.apply(port).map[com.agilogy.uri.AuthorityPathUri](((p: com.agilogy.uri.Port) =&gt;
            Uri.apply(scheme, Authority.apply(Host.apply(host), p))))
        </description>
        <symbolName>scala.util.Either.map</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Port</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.Port</fullClassName>
        <method>&lt;none&gt;</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>3</id>
        <start>444</start>
        <end>455</end>
        <line>15</line>
        <description>Port.this.stringValue</description>
        <symbolName>com.agilogy.uri.Port.stringValue</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>AuthorityPathUri</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.AuthorityPathUri</fullClassName>
        <method>/</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>317</id>
        <start>4143</start>
        <end>4160</end>
        <line>122</line>
        <description>this./(Segment.apply(s))</description>
        <symbolName>com.agilogy.uri.AuthorityPathUri./</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>noAuthority</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>353</id>
        <start>6908</start>
        <end>6944</end>
        <line>167</line>
        <description>NoAuthorityPathQUri.apply(scheme, path, q)</description>
        <symbolName>com.agilogy.uri.NoAuthorityPathQUri.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>12</id>
        <start>828</start>
        <end>832</end>
        <line>33</line>
        <description>scala.None</description>
        <symbolName>scala.None</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>425</id>
        <start>9116</start>
        <end>9124</end>
        <line>236</line>
        <description>chars.apply(i)</description>
        <symbolName>scala.Array.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>pctEncode</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>84</id>
        <start>790</start>
        <end>837</end>
        <line>22</line>
        <description>&quot;%0&quot;.+(java.lang.Integer.toHexString(c.toInt).toUpperCase())</description>
        <symbolName>java.lang.String.+</symbolName>
        <treeName>Block</treeName>
        <branch>true</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>434</id>
        <start>9231</start>
        <end>9246</end>
        <line>242</line>
        <description>chars.apply(i).==('?')</description>
        <symbolName>scala.Char.==</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>pctEncode</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>93</id>
        <start>1157</start>
        <end>1160</end>
        <line>31</line>
        <description>&quot;?&quot;</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Literal</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>isDigit</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>102</id>
        <start>1497</start>
        <end>1500</end>
        <line>44</line>
        <description>'0'</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Literal</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>NoAuthorityPathUri</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.NoAuthorityPathUri</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>299</id>
        <start>2410</start>
        <end>2413</end>
        <line>92</line>
        <description>new $anon()</description>
        <symbolName>com.agilogy.uri.NoAuthorityPathUri.$anon.&lt;init&gt;</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>AuthorityPathQUri</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.AuthorityPathQUri</fullClassName>
        <method>##</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>326</id>
        <start>4665</start>
        <end>4671</end>
        <line>131</line>
        <description>AuthorityPathQUri.this.scheme</description>
        <symbolName>com.agilogy.uri.AuthorityPathQUri.scheme</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>335</id>
        <start>5489</start>
        <end>5499</end>
        <line>144</line>
        <description>Host.apply(host)</description>
        <symbolName>com.agilogy.uri.Host.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>NoAuthorityPathQUri</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.NoAuthorityPathQUri</fullClassName>
        <method>##</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>308</id>
        <start>3463</start>
        <end>3469</end>
        <line>110</line>
        <description>NoAuthorityPathQUri.this.scheme</description>
        <symbolName>com.agilogy.uri.NoAuthorityPathQUri.scheme</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>readUntil</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>380</id>
        <start>8382</start>
        <end>8390</end>
        <line>202</line>
        <description>chars.apply(i)</description>
        <symbolName>scala.Array.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>416</id>
        <start>8967</start>
        <end>8972</end>
        <line>230</line>
        <description>i.+(2)</description>
        <symbolName>scala.Int.+</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>&lt;none&gt;</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>75</id>
        <start>526</start>
        <end>536</end>
        <line>15</line>
        <description>scala.Predef.augmentString(&quot;:@&quot;).toSet[Char]</description>
        <symbolName>scala.collection.TraversableOnce.toSet</symbolName>
        <treeName>TypeApply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>NoQueryFragmentUri</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.NoQueryFragmentUri</fullClassName>
        <method>?</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>281</id>
        <start>1453</start>
        <end>1465</end>
        <line>66</line>
        <description>Query.apply(query)</description>
        <symbolName>com.agilogy.uri.Query.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>NoAuthorityPathUri</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.NoAuthorityPathUri</fullClassName>
        <method>/</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>290</id>
        <start>2002</start>
        <end>2038</end>
        <line>83</line>
        <description>NoAuthorityPathUri.apply(NoAuthorityPathUri.this.scheme, NoAuthorityPathUri.this.path./(s))
        </description>
        <symbolName>com.agilogy.uri.NoAuthorityPathUri.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>30</id>
        <start>1335</start>
        <end>1375</end>
        <line>39</line>
        <description>Port.apply(port).map[com.agilogy.uri.Authority](((x$1: com.agilogy.uri.Port) =&gt;
            Authority.apply(Host.apply(host), x$1)))
        </description>
        <symbolName>scala.util.Either.map</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>371</id>
        <start>8135</start>
        <end>8147</end>
        <line>194</line>
        <description>chars.length</description>
        <symbolName>scala.Array.length</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>39</id>
        <start>1733</start>
        <end>1751</end>
        <line>42</line>
        <description>UserInfo.apply(userInfo)</description>
        <symbolName>com.agilogy.uri.UserInfo.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>isValidScheme</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>111</id>
        <start>1764</start>
        <end>1775</end>
        <line>51</line>
        <description>v.charAt(0)</description>
        <symbolName>java.lang.String.charAt</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>read</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>398</id>
        <start>8574</start>
        <end>8574</end>
        <line>213</line>
        <description>()</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Literal</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>matchParts</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>407</id>
        <start>8805</start>
        <end>8811</end>
        <line>223</line>
        <description>i.+(1)</description>
        <symbolName>scala.Int.+</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>&lt;none&gt;</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>66</id>
        <start>328</start>
        <end>333</end>
        <line>12</line>
        <description>&quot;+-.&quot;</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Literal</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>15</id>
        <start>895</start>
        <end>905</end>
        <line>34</line>
        <description>Host.apply(host)</description>
        <symbolName>com.agilogy.uri.Host.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>noAuthority</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>356</id>
        <start>6982</start>
        <end>7025</end>
        <line>168</line>
        <description>scala.`package`.Right.apply[Nothing,
            com.agilogy.uri.NoAuthorityPathFUri](NoAuthorityPathFUri.apply(scheme, path, f))
        </description>
        <symbolName>scala.util.Right.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>RootlessPath</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.RootlessPath</fullClassName>
        <method>toString</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>230</id>
        <start>4358</start>
        <end>4391</end>
        <line>125</line>
        <description>scala.StringContext.apply(&quot;RootlessPath(&quot;, &quot;)&quot;).s(RootlessPath.this.stringValue)</description>
        <symbolName>scala.StringContext.s</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>42</id>
        <start>1708</start>
        <end>1768</end>
        <line>42</line>
        <description>Port.apply(port).map[com.agilogy.uri.Authority](((x$2: com.agilogy.uri.Port) =&gt;
            Authority.apply(UserInfo.apply(userInfo), Host.apply(host), x$2)))
        </description>
        <symbolName>scala.util.Either.map</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>51</id>
        <start>2234</start>
        <end>2241</end>
        <line>52</line>
        <description>scala.Predef.augmentString(p).toInt</description>
        <symbolName>scala.collection.immutable.StringLike.toInt</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Segment.scala</source>
        <package>com.agilogy.uri</package>
        <class>EmptySegment</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.EmptySegment</fullClassName>
        <method>stringValue</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Segment.scala</path>
        <id>257</id>
        <start>503</start>
        <end>505</end>
        <line>16</line>
        <description>&quot;&quot;</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Literal</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>24</id>
        <start>1172</start>
        <end>1182</end>
        <line>37</line>
        <description>scala.Some.apply[com.agilogy.uri.Port](port)</description>
        <symbolName>scala.Some.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>338</id>
        <start>5598</start>
        <end>5608</end>
        <line>145</line>
        <description>Host.apply(host)</description>
        <symbolName>com.agilogy.uri.Host.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Authority</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Authority</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>33</id>
        <start>1445</start>
        <end>1488</end>
        <line>40</line>
        <description>Authority.apply(scala.Some.apply[com.agilogy.uri.UserInfo](userInfo), host,
            scala.Some.apply[com.agilogy.uri.Port](port))
        </description>
        <symbolName>com.agilogy.uri.Authority.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>347</id>
        <start>6201</start>
        <end>6243</end>
        <line>152</line>
        <description>AuthorityPathFUri.apply(scheme, authority, p, f)</description>
        <symbolName>com.agilogy.uri.AuthorityPathFUri.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>readUntil</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>374</id>
        <start>8239</start>
        <end>8241</end>
        <line>198</line>
        <description>&quot;&quot;</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Literal</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</source>
        <package>com.agilogy.uri</package>
        <class>Port</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Port</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Authority.scala</path>
        <id>6</id>
        <start>540</start>
        <end>561</end>
        <line>20</line>
        <description>scala.`package`.Left.apply[com.agilogy.uri.NegativePort, Nothing](NegativePort.apply(v))
        </description>
        <symbolName>scala.util.Left.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>AbsolutePath</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.AbsolutePath</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>221</id>
        <start>3635</start>
        <end>3702</end>
        <line>104</line>
        <description>tail.foldLeft[com.agilogy.uri.AbsolutePath](AbsoluteSingleSegmentPath.apply(head))(((x$1:
            com.agilogy.uri.AbsolutePath, x$2: com.agilogy.uri.Segment) =&gt; x$1./(x$2)))
        </description>
        <symbolName>scala.collection.TraversableOnce.foldLeft</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Scheme.scala</source>
        <package>com.agilogy.uri</package>
        <class>Scheme</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.Scheme</fullClassName>
        <method>asciiStringValue</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Scheme.scala</path>
        <id>248</id>
        <start>142</start>
        <end>153</end>
        <line>4</line>
        <description>Scheme.this.stringValue</description>
        <symbolName>com.agilogy.uri.Scheme.stringValue</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>AuthorityPathUri</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.AuthorityPathUri</fullClassName>
        <method>?</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>320</id>
        <start>4250</start>
        <end>4254</end>
        <line>124</line>
        <description>AuthorityPathUri.this.path</description>
        <symbolName>com.agilogy.uri.AuthorityPathUri.path</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>NoAuthorityPathUri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.NoAuthorityPathUri</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>302</id>
        <start>2915</start>
        <end>2970</end>
        <line>99</line>
        <description>PathStartsWithDoubleSlashInNoAuhtorityUri.apply(scheme, path)</description>
        <symbolName>com.agilogy.uri.PathStartsWithDoubleSlashInNoAuhtorityUri.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>AuthorityPathQUri</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.AuthorityPathQUri</fullClassName>
        <method>##</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>329</id>
        <start>4693</start>
        <end>4701</end>
        <line>131</line>
        <description>AuthorityPathQUri.this.theQuery</description>
        <symbolName>com.agilogy.uri.AuthorityPathQUri.theQuery</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>Path</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Path</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>203</id>
        <start>2303</start>
        <end>2313</end>
        <line>61</line>
        <description>m.group(1)</description>
        <symbolName>scala.util.matching.Regex.MatchData.group</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>AbsolutePath</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.AbsolutePath</fullClassName>
        <method>pathType</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>212</id>
        <start>3284</start>
        <end>3301</end>
        <line>94</line>
        <description>PathType.Absolute</description>
        <symbolName>com.agilogy.uri.PathType.Absolute</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>NoFragmentUri</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.NoFragmentUri</fullClassName>
        <method>fragment</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>275</id>
        <start>1065</start>
        <end>1069</end>
        <line>52</line>
        <description>scala.None</description>
        <symbolName>scala.None</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>NoQueryFragmentUri</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.NoQueryFragmentUri</fullClassName>
        <method>q</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>284</id>
        <start>1543</start>
        <end>1555</end>
        <line>68</line>
        <description>Query.apply(query)</description>
        <symbolName>com.agilogy.uri.Query.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>NoAuthorityPathQUri</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.NoAuthorityPathQUri</fullClassName>
        <method>##</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>311</id>
        <start>3442</start>
        <end>3489</end>
        <line>110</line>
        <description>NoAuthorityPathQFUri.apply(NoAuthorityPathQUri.this.scheme, NoAuthorityPathQUri.this.path,
            NoAuthorityPathQUri.this.theQuery, f)
        </description>
        <symbolName>com.agilogy.uri.NoAuthorityPathQFUri.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>NoAuthorityPathUri</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.NoAuthorityPathUri</fullClassName>
        <method>?</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>293</id>
        <start>2220</start>
        <end>2226</end>
        <line>86</line>
        <description>NoAuthorityPathUri.this.scheme</description>
        <symbolName>com.agilogy.uri.NoAuthorityPathUri.scheme</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>&lt;none&gt;</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>365</id>
        <start>7720</start>
        <end>7782</end>
        <line>182</line>
        <description>scala.Predef.augmentString(&quot;^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?&quot;).r</description>
        <symbolName>scala.collection.immutable.StringLike.r</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>equals</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>266</id>
        <start>549</start>
        <end>562</end>
        <line>27</line>
        <description>u.stringValue</description>
        <symbolName>com.agilogy.uri.Uri.stringValue</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>AbsoluteSingleSegmentPath</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.AbsoluteSingleSegmentPath</fullClassName>
        <method>segments</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>239</id>
        <start>5076</start>
        <end>5088</end>
        <line>147</line>
        <description>scala.collection.Seq.apply[com.agilogy.uri.Segment](AbsoluteSingleSegmentPath.this.segment)
        </description>
        <symbolName>scala.collection.generic.GenericCompanion.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>AuthorityPathUri</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.AuthorityPathUri</fullClassName>
        <method>/</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>314</id>
        <start>4082</start>
        <end>4082</end>
        <line>121</line>
        <description>this.copy$default$2</description>
        <symbolName>com.agilogy.uri.AuthorityPathUri.copy$default$2</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</source>
        <package>validation</package>
        <class>NoAuthorityPathQUriVOps</class>
        <classType>Class</classType>
        <fullClassName>validation.Validation.NoAuthorityPathQUriVOps</fullClassName>
        <method>f</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</path>
        <id>511</id>
        <start>2440</start>
        <end>2452</end>
        <line>36</line>
        <description>x$13.f(fragment)</description>
        <symbolName>com.agilogy.uri.NoFragmentUri.f</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</source>
        <package>validation</package>
        <class>NoAuthorityPathUriVOps</class>
        <classType>Class</classType>
        <fullClassName>validation.Validation.NoAuthorityPathUriVOps</fullClassName>
        <method>?</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</path>
        <id>493</id>
        <start>1185</start>
        <end>1194</end>
        <line>23</line>
        <description>x$4.?(query)</description>
        <symbolName>com.agilogy.uri.NoQueryFragmentUri.?</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>Path</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Path</fullClassName>
        <method>/</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>179</id>
        <start>962</start>
        <end>990</end>
        <line>29</line>
        <description>AbsoluteSingleSegmentPath.apply(s)</description>
        <symbolName>com.agilogy.uri.AbsoluteSingleSegmentPath.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quoteAuthority</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>152</id>
        <start>4612</start>
        <end>4614</end>
        <line>137</line>
        <description>&quot;&quot;</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Literal</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>Path</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Path</fullClassName>
        <method>absolute</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>188</id>
        <start>1515</start>
        <end>1554</end>
        <line>43</line>
        <description>AbsolutePath.apply(segment, (moreSegments: _*))</description>
        <symbolName>com.agilogy.uri.AbsolutePath.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</source>
        <package>validation</package>
        <class>NoAuthorityPathUriVOps</class>
        <classType>Class</classType>
        <fullClassName>validation.Validation.NoAuthorityPathUriVOps</fullClassName>
        <method>##</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</path>
        <id>502</id>
        <start>1666</start>
        <end>1689</end>
        <line>28</line>
        <description>NoAuthorityPathUriVOps.this.self.map[com.agilogy.uri.NoAuthorityPathFUri](((x$8:
            com.agilogy.uri.NoAuthorityPathUri) =&gt; x$8.##(fragment)))
        </description>
        <symbolName>scala.util.Either.map</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Segment.scala</source>
        <package>com.agilogy.uri</package>
        <class>Segment</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Segment</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Segment.scala</path>
        <id>260</id>
        <start>642</start>
        <end>647</end>
        <line>22</line>
        <description>Segment.this.Empty</description>
        <symbolName>com.agilogy.uri.Segment.Empty</symbolName>
        <treeName>Block</treeName>
        <branch>true</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>NoAuthorityUri</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.NoAuthorityUri</fullClassName>
        <method>&lt;none&gt;</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>269</id>
        <start>668</start>
        <end>672</end>
        <line>33</line>
        <description>scala.None</description>
        <symbolName>scala.None</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>475</id>
        <start>10520</start>
        <end>10571</end>
        <line>278</line>
        <description>throw new java.lang.IllegalStateException(&quot;Unreachable code&quot;)</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Throw</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</source>
        <package>validation</package>
        <class>Validation</class>
        <classType>Trait</classType>
        <fullClassName>validation.Validation</fullClassName>
        <method>sequence</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/validation/Validation.scala</path>
        <id>484</id>
        <start>338</start>
        <end>342</end>
        <line>10</line>
        <description>scala.None</description>
        <symbolName>scala.None</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>Path</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.Path</fullClassName>
        <method>isAbsolute</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>170</id>
        <start>442</start>
        <end>459</end>
        <line>16</line>
        <description>PathType.Absolute</description>
        <symbolName>com.agilogy.uri.PathType.Absolute</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quote</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>143</id>
        <start>2322</start>
        <end>2322</end>
        <line>69</line>
        <description>()</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Literal</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>AbsolutePath</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.AbsolutePath</fullClassName>
        <method>toString</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>215</id>
        <start>3515</start>
        <end>3529</end>
        <line>99</line>
        <description>&quot;AbsolutePath(&quot;</description>
        <symbolName>&lt;nosymbol&gt;</symbolName>
        <treeName>Literal</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>Uri</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Uri</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>466</id>
        <start>10130</start>
        <end>10147</end>
        <line>270</line>
        <description>Encoder.decode(f)</description>
        <symbolName>com.agilogy.uri.Encoder.decode</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>FragmentUri</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.FragmentUri</fullClassName>
        <method>fragment</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>287</id>
        <start>1663</start>
        <end>1680</end>
        <line>75</line>
        <description>scala.Some.apply[com.agilogy.uri.Fragment](FragmentUri.this.theFragment)</description>
        <symbolName>scala.Some.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</source>
        <package>com.agilogy.uri</package>
        <class>Encoder</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Encoder</fullClassName>
        <method>quoteUri</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Encoder.scala</path>
        <id>161</id>
        <start>4804</start>
        <end>4826</end>
        <line>145</line>
        <description>uri.scheme.stringValue</description>
        <symbolName>com.agilogy.uri.Scheme.stringValue</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>RootlessSingleSegmentPath</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.RootlessSingleSegmentPath</fullClassName>
        <method>/</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>242</id>
        <start>5422</start>
        <end>5447</end>
        <line>157</line>
        <description>ConsRootlessPath.apply(this, s)</description>
        <symbolName>com.agilogy.uri.ConsRootlessPath.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Scheme.scala</source>
        <package>com.agilogy.uri</package>
        <class>Scheme</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Scheme</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Scheme.scala</path>
        <id>251</id>
        <start>271</start>
        <end>297</end>
        <line>10</line>
        <description>scala.`package`.Left.apply[com.agilogy.uri.IllegalSchemeName,
            Nothing](IllegalSchemeName.apply(v))
        </description>
        <symbolName>scala.util.Left.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>Path</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Path</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>197</id>
        <start>2001</start>
        <end>2011</end>
        <line>55</line>
        <description>Path.empty</description>
        <symbolName>com.agilogy.uri.Path.empty</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>NonEmptyAbsolutePath</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.NonEmptyAbsolutePath</fullClassName>
        <method>segments</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>224</id>
        <start>3873</start>
        <end>3899</end>
        <line>109</line>
        <description>NonEmptyAbsolutePath.this.parent.segments.:+[com.agilogy.uri.Segment,
            Seq[com.agilogy.uri.Segment]](NonEmptyAbsolutePath.this.segment)(collection.this.Seq.canBuildFrom[com.agilogy.uri.Segment])
        </description>
        <symbolName>scala.collection.SeqLike.:+</symbolName>
        <treeName>ApplyToImplicitArgs</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>Path</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.Path</fullClassName>
        <method>parse</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>206</id>
        <start>2331</start>
        <end>2375</end>
        <line>62</line>
        <description>NonEmptySegment.apply(Encoder.decode(headSegment))</description>
        <symbolName>com.agilogy.uri.NonEmptySegment.apply</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</source>
        <package>com.agilogy.uri</package>
        <class>RootlessPath</class>
        <classType>Object</classType>
        <fullClassName>com.agilogy.uri.RootlessPath</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Path.scala</path>
        <id>233</id>
        <start>4502</start>
        <end>4569</end>
        <line>131</line>
        <description>tail.foldLeft[com.agilogy.uri.RootlessPath](RootlessSingleSegmentPath.apply(head))(((x$3:
            com.agilogy.uri.RootlessPath, x$4: com.agilogy.uri.Segment) =&gt; x$3./(x$4)))
        </description>
        <symbolName>scala.collection.TraversableOnce.foldLeft</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>NoAuthorityPathUri</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.NoAuthorityPathUri</fullClassName>
        <method>##</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>296</id>
        <start>2312</start>
        <end>2318</end>
        <line>88</line>
        <description>NoAuthorityPathUri.this.scheme</description>
        <symbolName>com.agilogy.uri.NoAuthorityPathUri.scheme</symbolName>
        <treeName>Select</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>NoFragmentUri</class>
        <classType>Trait</classType>
        <fullClassName>com.agilogy.uri.NoFragmentUri</fullClassName>
        <method>f</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>278</id>
        <start>1203</start>
        <end>1212</end>
        <line>58</line>
        <description>this.##(f)</description>
        <symbolName>com.agilogy.uri.NoFragmentUri.##</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
    <statement>
        <source>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</source>
        <package>com.agilogy.uri</package>
        <class>NoAuthorityPathUri</class>
        <classType>Class</classType>
        <fullClassName>com.agilogy.uri.NoAuthorityPathUri</fullClassName>
        <method>apply</method>
        <path>/Users/jordi/work/opensource/uri/src/main/scala/com/agilogy/uri/Uri.scala</path>
        <id>305</id>
        <start>3140</start>
        <end>3143</end>
        <line>102</line>
        <description>new $anon()</description>
        <symbolName>com.agilogy.uri.NoAuthorityPathUri.$anon.&lt;init&gt;</symbolName>
        <treeName>Apply</treeName>
        <branch>false</branch>
        <count>0</count>
        <ignored>false</ignored>
    </statement>
</statements>